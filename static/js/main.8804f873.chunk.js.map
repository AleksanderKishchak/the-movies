{"version":3,"sources":["img/logo.png","img/arrow-up.svg","actions/movies.js","reducers/moviesReducer.js","reducers/RootReducer.js","selectors/sortingSelector.js","api/resolvedSortingTypeNames.js","api/apiCalls.js","helpers/getUserLanguage.js","sagas/moviesSaga.js","sagas/rootSaga.js","store.js","components/Loader/Loader.js","components/ActivityGauge/ActivityGauge.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/withInfiniteScrolling.js","helpers/getDisplayName.js","containers/MoviesListContainer.js","components/SortingBar/StyledMenuItem.js","components/SortingBar/SortingBar.js","containers/SortingBarContainer.js","components/ViewToggle/ToggleItem/ToggleItem.js","components/ViewToggle/ViewToggle.js","containers/ViewToggleContainer.js","components/withMobileDetection.js","pages/MoviesListPage/MoviesListPage.js","components/GenresList/GenreItem/GenreItem.js","components/GenresList/GenresList.js","containers/GenresListContainer.js","components/Sidebar/Sidebar.js","components/Content/Content.js","components/Form/Form.js","containers/FormContainer.js","components/Header/Header.js","pages/MoviePage/MoviePage.js","components/NotFound/NotFound.js","components/GoUp/GoUp.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","ADD_MOVIES_SUCCESS","GET_GENRES","GET_MOVIES_BY_NAME","GET_MOVIES_BY_GENRE","GET_MOVIES_FAILED","GET_POPULAR_MOVIES","GET_MOVIES_SUCCESS","LOAD_MORE","MOVIES_REQUEST","SET_SORTING","SET_VIEW_TYPE","SET_SEARCH_TEXT","requestMovies","type","getMoviesSuccess","movies","URL","totalPages","getMoviesFailed","addMovies","getGenres","genres","setSearchText","text","initialState","fetching","currentPage","lastFetchURL","viewType","sortingType","searchText","error","combineReducers","state","arguments","length","undefined","Object","objectSpread","action","concat","toConsumableArray","param","getSortedMovies","createSelector","newMovies","sort","movie1","movie2","popularity","_ref","release_date","date1","date2","_ref2","resolvedSortingTypeNames","_POPULARITY_ASC$POPUL","defineProperty","axios","defaults","baseURL","apiKey","process","language","window","navigator","callApi","url","get","then","response","data","catch","getURLbyParams","params","page","name","genreId","formattedSorting","resolvedSortingNames","activeSorting","getPopularMovies","getMoviesByName","getMoviesByGenre","getMoreMovies","getGenresSaga","watchGettingMovies","regenerator_default","a","wrap","_context","prev","next","put","call","sent","results","total_pages","t0","console","stop","_marked","this","_context2","_marked2","_context3","select","_marked3","_ref3","nextPageURL","_context4","_ref4","abrupt","replace","_marked4","_context5","_marked5","_context6","takeLatest","_marked6","rootSaga","all","rootSaga_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","run","Loader","wrapperStyle","react_default","createElement","className","style","defaultProps","HCMore","Highcharts","SolidGauge","ActivityGauge","value","options","chart","height","backgroundColor","margin","title","tooltip","enabled","pane","startAngle","endAngle","background","outerRadius","innerRadius","Color","getOptions","colors","setOpacity","borderWidth","yAxis","min","max","lineWidth","tickPositions","plotOptions","solidgauge","dataLabels","defer","y","x","color","useHTML","fontSize","linecap","rounded","series","radius","highcharts_react_min_default","highcharts","MovieCard","_this$props$movie","props","movie","poster_path","overview","id","vote_average","releaseDate","moment","format","movieOverview","substr","posterUrl","src","alt","ActivityGauge_ActivityGauge","Link","to","Component","MoviesList","loaderWrapperStyles","minHeight","prevProps","_this$props","reachedBottom","loadMore","_this$props2","activeViewType","components_Loader_Loader","Fragment","toLowerCase","map","components_MovieCard_MovieCard","key","PureComponent","trashold","getDisplayName","displayName","withInfiniteScrolling","_PureComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","onScroll","availDocumentHeight","document","documentElement","clientHeight","distanceToBottom","scroller","getBoundingClientRect","bottom","setState","getScrollerRef","node","inherits","createClass","addEventListener","removeEventListener","assign","ref","connect","_ref$movies","dispatch","styles","display","justifyContent","minWidth","StyledMenuItem","children","rest","objectWithoutProperties","MenuItem_default","SortingBar","selectStyles","marginLeft","handleChange","e","target","onSetSorting","Select_default","onChange","inputProps","SortingBar_StyledMenuItem","ToggleItem","checked","htmlFor","hidden","onlyUpdateForKeys","onChangeView","ViewToggle_ToggleItem_ToggleItem","ViewList_default","ViewModule_default","setViewType","ViewToggle","detectMobile","ua","userAgent","some","mobile","includes","withMobileDetection","WithMobileDetection","isMobile","SortingBarContainer","ViewToggleContainer","MoviesListContainer","GenreItem","onClick","ListItem_default","button","component","ListItemText_default","disableTypography","primary","shouldUpdate","GenreList","sideEffectsOnClick","history","location","clearSearchInput","pathname","push","redirectIfNotOnMain","nextProps","_this$props3","List_default","GenresList_GenreItem_GenreItem","withRouter","GenresList","Sidebar","isOpen","onClose","sidebarClasses","role","Content","Form","onInputChange","onSubmit","preventDefault","classes","FormControl_default","formControl","InputLabel_default","root","cssLabel","focused","cssFocused","Input_default","fullWidth","underline","cssUnderline","input","IconButton_default","aria-label","Search_default","withStyles","marginBottom","flexDirection","flexBasis","&$cssFocused","&:after","borderBottomColor","&:before","toggleSidebar","FormContainer","Menu_default","logo","MoviePage","fethcing","hasError","_this2","match","message","_this$state","budget","runtime","status","genresName","genre","join","iconStyles","width","NotFound","BugReport_default","Button_default","variant","GoUp","visible","onWheel","scrollY","deltaY","scrollTo","top","behavior","arrow","App","closeSidebar","isSidebarOpen","components_GoUp_GoUp","components_Header_Header","components_Sidebar_Sidebar","GenresListContainer","components_Content_Content","Switch","Route","exact","path","MoviesListPage","render","pages_MoviePage_MoviePage","ReactDOM","es","BrowserRouter","basename","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.8804f873.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b205435e.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow-up.65591717.svg\";","export const ADD_MOVIES_SUCCESS = 'ADD_MOVIES_SUCCESS';\r\nexport const GET_GENRES = 'GET_GENRES';\r\nexport const GET_MOVIES_BY_NAME = 'GET_MOVIES_BY_NAME';\r\nexport const GET_MOVIES_BY_GENRE = 'GET_MOVIES_BY_GENRE';\r\nexport const GET_MOVIES_FAILED = 'GET_MOVIES_FAILED';\r\nexport const GET_POPULAR_MOVIES = 'GET_POPULAR_MOVIES';\r\nexport const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\r\nexport const LOAD_MORE = 'LOAD_MORE';\r\nexport const MOVIES_REQUEST = 'MOVIES_REQUEST';\r\nexport const SET_SORTING = 'SET_SORTING';\r\nexport const SET_VIEW_TYPE = 'SET_VIEW_TYPE';\r\nexport const SET_SEARCH_TEXT = 'SET_SEARCH_TEXT';\r\n\r\nexport function setViewType(viewType) {\r\n  return {\r\n    type: SET_VIEW_TYPE,\r\n    viewType\r\n  };\r\n}\r\n\r\nexport function setSorting(param) {\r\n  return {\r\n    type: SET_SORTING,\r\n    param\r\n  };\r\n}\r\n\r\nexport function requestMovies() {\r\n  return { type: MOVIES_REQUEST };\r\n}\r\n\r\nexport function getMoviesSuccess(movies, URL, totalPages) {\r\n  return {\r\n    type: GET_MOVIES_SUCCESS,\r\n    movies,\r\n    URL,\r\n    totalPages\r\n  };\r\n}\r\n\r\nexport function getMoviesFailed() {\r\n  return { type: GET_MOVIES_FAILED };\r\n}\r\n\r\nexport function addMovies(movies) {\r\n  return {\r\n    type: ADD_MOVIES_SUCCESS,\r\n    movies\r\n  };\r\n}\r\n\r\nexport function getMoviesByName(name) {\r\n  return { type: GET_MOVIES_BY_NAME, name };\r\n}\r\n\r\nexport function getMoviesByPopularity() {\r\n  return { type: GET_POPULAR_MOVIES };\r\n}\r\n\r\nexport function getMoviesByGenre(genreId) {\r\n  return { type: GET_MOVIES_BY_GENRE, genreId };\r\n}\r\n\r\nexport function loadMore() {\r\n  return {\r\n    type: LOAD_MORE\r\n  };\r\n}\r\n\r\nexport function getGenres(genres) {\r\n  return {\r\n    type: GET_GENRES,\r\n    genres\r\n  };\r\n}\r\n\r\nexport function setSearchText(text) {\r\n  return {\r\n    type: SET_SEARCH_TEXT,\r\n    text\r\n  };\r\n}\r\n","import {\r\n  SET_VIEW_TYPE,\r\n  GET_MOVIES_SUCCESS,\r\n  MOVIES_REQUEST,\r\n  SET_SORTING,\r\n  GET_MOVIES_FAILED,\r\n  ADD_MOVIES_SUCCESS,\r\n  GET_GENRES,\r\n  SET_SEARCH_TEXT\r\n} from '../actions/movies';\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  movies: [],\r\n  currentPage: 1,\r\n  totalPages: 1000,\r\n  lastFetchURL: '',\r\n  viewType: 'LIST',\r\n  sortingType: 'POPULARITY_DESC',\r\n  searchText: '',\r\n  error: false,\r\n  genres: []\r\n};\r\n\r\nexport default function reducer(state = { ...initialState }, action) {\r\n  switch (action.type) {\r\n    case GET_GENRES:\r\n      return { ...state, genres: action.genres };\r\n\r\n    case MOVIES_REQUEST:\r\n      return { ...state, fetching: true };\r\n\r\n    case GET_MOVIES_FAILED:\r\n      return { ...state, fetching: false, error: true };\r\n\r\n    case GET_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        movies: action.movies,\r\n        fetching: false,\r\n        error: false,\r\n        lastFetchURL: action.URL,\r\n        totalPages: action.totalPages\r\n      };\r\n\r\n    case ADD_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPage: state.currentPage + 1,\r\n        movies: [...state.movies, ...action.movies],\r\n        fetching: false,\r\n        error: false\r\n      };\r\n\r\n    case SET_SORTING:\r\n      return { ...state, sortingType: action.param };\r\n\r\n    case SET_VIEW_TYPE:\r\n      return { ...state, viewType: action.viewType };\r\n\r\n    case SET_SEARCH_TEXT:\r\n      return { ...state, searchText: action.text };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport movies from './moviesReducer';\r\n\r\nexport default combineReducers({\r\n  movies\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const POPULARITY_DESC = 'POPULARITY_DESC';\r\nexport const POPULARITY_ASC = 'POPULARITY_ASC';\r\nexport const RELEASE_DATE_DESC = 'RELEASE_DATE_DESC';\r\nexport const RELEASE_DATE_ASC = 'RELEASE_DATE_ASC';\r\n\r\nconst getMovies = state => state.movies;\r\nconst getSortingType = state => state.sortingType;\r\n\r\nexport const getSortedMovies = createSelector(\r\n  [getMovies, getSortingType],\r\n  (movies, sortingType) => {\r\n    const newMovies = [...movies];\r\n    switch (sortingType) {\r\n      case POPULARITY_DESC:\r\n        return newMovies.sort((movie1, movie2) => movie2.popularity - movie1.popularity);\r\n\r\n      case POPULARITY_ASC:\r\n        return newMovies.sort((movie1, movie2) => movie1.popularity - movie2.popularity);\r\n\r\n      case RELEASE_DATE_DESC:\r\n        return newMovies.sort((movie1, movie2) => {\r\n          const [date1, date2] = [movie1.release_date, movie2.release_date];\r\n\r\n          if (date2 > date1) return 1;\r\n          if (date2 < date1) return -1;\r\n\r\n          return 0;\r\n        });\r\n\r\n      case RELEASE_DATE_ASC:\r\n        return newMovies.sort((movie1, movie2) => {\r\n          const [date1, date2] = [movie1.release_date, movie2.release_date];\r\n\r\n          if (date2 < date1) return 1;\r\n          if (date2 > date1) return -1;\r\n\r\n          return 0;\r\n        });\r\n\r\n      default:\r\n        return movies;\r\n    }\r\n  }\r\n);\r\n","import {\r\n  POPULARITY_ASC,\r\n  POPULARITY_DESC,\r\n  RELEASE_DATE_ASC,\r\n  RELEASE_DATE_DESC\r\n} from '../selectors/sortingSelector';\r\n\r\nexport default {\r\n  [POPULARITY_ASC]: 'popularity.asc',\r\n  [POPULARITY_DESC]: 'popularity.asc',\r\n  [RELEASE_DATE_ASC]: 'release_date.asc',\r\n  [RELEASE_DATE_DESC]: 'release_date.desc'\r\n};\r\n","import axios from 'axios';\r\n\r\nimport resolvedSortingNames from './resolvedSortingTypeNames';\r\nimport getUserLanguage from '../helpers/getUserLanguage';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconst language = `&language=${getUserLanguage}`;\r\n\r\nexport function callApi(url) {\r\n  return axios\r\n    .get(url)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport function fetchMovie(id) {\r\n  const url = `/movie/${id}?api_key=${apiKey}${language}&append_to_response=videos`;\r\n\r\n  return callApi(url);\r\n}\r\n\r\n// By default returns URL for getting popular movies\r\nexport function getURLbyParams(params = {}, page = 1) {\r\n  // Getting movies by Name\r\n  if (params.name) {\r\n    return `search/movie?api_key=${apiKey}&query=${params.name}${language}&page=${page}`;\r\n  }\r\n\r\n  // Getting movies by Genre\r\n  if (params.genreId) {\r\n    const formattedSorting = resolvedSortingNames[params.activeSorting];\r\n\r\n    return `/discover/movie?api_key=${apiKey}&sort_by=${formattedSorting}${language}&page=${page}&with_genres=${\r\n      params.genreId\r\n    }`;\r\n  }\r\n\r\n  return `movie/popular?api_key=${apiKey}${language}&page=${page}`;\r\n}\r\n\r\nexport function getGenresURL() {\r\n  return `/genre/movie/list?api_key=${apiKey}${language}`;\r\n}\r\n","export default () => window.navigator.language;\r\n","import {\r\n  put, call, takeLatest, select\r\n} from 'redux-saga/effects';\r\n\r\nimport {\r\n  GET_POPULAR_MOVIES,\r\n  GET_MOVIES_BY_GENRE,\r\n  GET_MOVIES_BY_NAME,\r\n  LOAD_MORE,\r\n  getMoviesSuccess,\r\n  requestMovies,\r\n  getMoviesFailed,\r\n  addMovies,\r\n  getGenres\r\n} from '../actions/movies';\r\nimport { getURLbyParams, callApi, getGenresURL } from '../api/apiCalls';\r\n\r\nfunction* getPopularMovies() {\r\n  try {\r\n    yield put(requestMovies());\r\n\r\n    const URL = yield call(getURLbyParams);\r\n    const data = yield call(callApi, URL);\r\n    const { results: movies, total_pages: totalPages } = data;\r\n\r\n    yield put(getMoviesSuccess(movies, URL, totalPages));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nfunction* getMoviesByName({ name }) {\r\n  try {\r\n    yield put(requestMovies());\r\n\r\n    const URL = yield call(getURLbyParams, { name });\r\n    const data = yield call(callApi, URL);\r\n    const { results: movies, total_pages: totalPages } = data;\r\n\r\n    yield put(getMoviesSuccess(movies, URL, totalPages));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nfunction* getMoviesByGenre({ genreId }) {\r\n  try {\r\n    yield put(requestMovies());\r\n    const activeSorting = yield select(state => state.movies.sortingType);\r\n\r\n    const URL = yield call(getURLbyParams, { genreId, activeSorting });\r\n    const data = yield call(callApi, URL);\r\n    const { results: movies, total_pages: totalPages } = data;\r\n\r\n    yield put(getMoviesSuccess(movies, URL, totalPages));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nfunction* getMoreMovies() {\r\n  try {\r\n    const { lastFetchURL, currentPage, totalPages } = yield select(({ movies }) => movies);\r\n\r\n    if (currentPage >= totalPages) {\r\n      return;\r\n    }\r\n\r\n    yield put(requestMovies());\r\n    const nextPageURL = lastFetchURL.replace(/page=./, `page=${currentPage + 1}`);\r\n    const data = yield call(callApi, nextPageURL);\r\n    const movies = data.results;\r\n    yield put(addMovies(movies));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nexport function* getGenresSaga() {\r\n  const genres = yield call(callApi, getGenresURL());\r\n  yield put(getGenres(genres.genres));\r\n}\r\n\r\nexport default function* watchGettingMovies() {\r\n  yield takeLatest(GET_POPULAR_MOVIES, getPopularMovies);\r\n  yield takeLatest(GET_MOVIES_BY_NAME, getMoviesByName);\r\n  yield takeLatest(GET_MOVIES_BY_GENRE, getMoviesByGenre);\r\n  yield takeLatest(LOAD_MORE, getMoreMovies);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport watchGettingMovies, { getGenresSaga } from './moviesSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchGettingMovies(), getGenresSaga()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from './reducers/RootReducer';\r\n\r\nimport rootSaga from './sagas/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Loader.sass';\r\n\r\nfunction Loader({ wrapperStyle }) {\r\n  return (\r\n    <div className=\"loader-wrap\" style={wrapperStyle}>\r\n      <div className=\"loader\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nLoader.propTypes = {\r\n  wrapperStyle: PropTypes.object\r\n};\r\n\r\nLoader.defaultProps = {\r\n  wrapperStyle: {}\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Highcharts from 'highcharts';\r\nimport SolidGauge from 'highcharts/modules/solid-gauge';\r\nimport HCMore from 'highcharts/highcharts-more';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nHCMore(Highcharts);\r\nSolidGauge(Highcharts);\r\n\r\nfunction ActivityGauge({ value }) {\r\n  // Settings for chart\r\n  const options = {\r\n    chart: {\r\n      type: 'solidgauge',\r\n      height: '100%',\r\n      backgroundColor: 'none',\r\n      className: 'activity',\r\n      margin: [0, 0, 0, 0]\r\n    },\r\n\r\n    title: {\r\n      text: ''\r\n    },\r\n\r\n    tooltip: {\r\n      enabled: false\r\n    },\r\n\r\n    pane: {\r\n      startAngle: 0,\r\n      endAngle: 360,\r\n      background: {\r\n        // Track for Move\r\n        outerRadius: '95%',\r\n        innerRadius: '70%',\r\n        backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0])\r\n          .setOpacity(0.3)\r\n          .get(),\r\n        borderWidth: 0\r\n      }\r\n    },\r\n\r\n    yAxis: {\r\n      min: 0,\r\n      max: 10,\r\n      lineWidth: 0,\r\n      tickPositions: []\r\n    },\r\n\r\n    plotOptions: {\r\n      solidgauge: {\r\n        dataLabels: {\r\n          enabled: true,\r\n          backgroundColor: 'none',\r\n          borderWidth: 0,\r\n          defer: true,\r\n          y: -14,\r\n          x: -1,\r\n          color: Highcharts.getOptions().colors[0],\r\n          useHTML: true,\r\n          style: {\r\n            fontSize: '0.8rem'\r\n          }\r\n        },\r\n        linecap: 'round',\r\n        rounded: true\r\n      }\r\n    },\r\n\r\n    series: [\r\n      {\r\n        name: 'Popularity',\r\n        data: [\r\n          {\r\n            color: Highcharts.getOptions().colors[0],\r\n            radius: '95%',\r\n            innerRadius: '70%',\r\n            y: value\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n}\r\n\r\nActivityGauge.propTypes = {\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ActivityGauge;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport ActivityGauge from '../ActivityGauge/ActivityGauge';\r\nimport './MovieCard.sass';\r\n\r\nclass MovieCard extends Component {\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      movie: {\r\n        poster_path, title, release_date, overview, id, vote_average\r\n      }\r\n    } = this.props;\r\n\r\n    const releaseDate = release_date ? moment(release_date).format('MMMM D, YYYY') : null;\r\n    const movieOverview = overview.length > 100 ? `${overview.substr(0, 97)}...` : overview;\r\n    const posterUrl = poster_path\r\n      ? `http://image.tmdb.org/t/p/w185/${poster_path}`\r\n      : 'https://via.placeholder.com/185x278/0000FF/808080';\r\n\r\n    return (\r\n      <article className=\"movie-card\">\r\n        <div className=\"poster\">\r\n          <img src={posterUrl} alt={title} className=\"poster-image\" />\r\n        </div>\r\n\r\n        <div className=\"info\">\r\n          <div className=\"title-wrapper\">\r\n            <div className=\"popularity\">\r\n              <ActivityGauge value={vote_average} />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"title\">{title}</h3>\r\n              {releaseDate && <time className=\"release-date\">{releaseDate}</time>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"description\">{movieOverview}</div>\r\n\r\n          <div className=\"more-info\">\r\n            <Link to={`/movie/${id}`} className=\"more-info-link\">\r\n              More info\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport './MoviesList.sass';\r\n\r\nclass MoviesList extends PureComponent {\r\n  static propTypes = {\r\n    movies: PropTypes.array,\r\n    fetching: PropTypes.bool.isRequired,\r\n    activeViewType: PropTypes.string.isRequired,\r\n    error: PropTypes.bool.isRequired,\r\n    reachedBottom: PropTypes.bool,\r\n    loadMore: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    movies: [],\r\n    reachedBottom: false,\r\n    loadMore: () => {}\r\n  };\r\n\r\n  loaderWrapperStyles = {\r\n    minHeight: 'calc(100vh - 260px)'\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { reachedBottom, loadMore } = this.props;\r\n\r\n    if (!prevProps.reachedBottom && reachedBottom) {\r\n      loadMore();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      movies, fetching, activeViewType, error\r\n    } = this.props;\r\n\r\n    if (fetching && !movies.length > 0) {\r\n      return <Loader wrapperStyle={this.loaderWrapperStyles} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={`movies-list ${activeViewType.toLowerCase()}`}>\r\n          {movies.length > 0\r\n            ? movies.map(movie => <MovieCard key={movie.id} movie={movie} />)\r\n            : !fetching && !error && 'Movies not found'}\r\n        </div>\r\n        {error ? <div className=\"error-message\">Something went wrong!</div> : null}\r\n        {fetching ? <Loader /> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesList;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport getDisplayName from '../helpers/getDisplayName';\r\n\r\nexport default trashold => Component => {\r\n  class withInfiniteScrolling extends PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        reachedBottom: false\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      if (this.scroller) {\r\n        window.addEventListener('scroll', this.onScroll);\r\n      }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n      const availDocumentHeight = document.documentElement.clientHeight;\r\n      const distanceToBottom = this.scroller.getBoundingClientRect().bottom - availDocumentHeight;\r\n      const { reachedBottom } = this.state;\r\n\r\n      if (distanceToBottom < trashold && !reachedBottom) {\r\n        this.setState({ reachedBottom: true });\r\n      } else if (distanceToBottom > trashold && reachedBottom) {\r\n        this.setState({ reachedBottom: false });\r\n      }\r\n    };\r\n\r\n    getScrollerRef = node => {\r\n      this.scroller = node;\r\n    };\r\n\r\n    render() {\r\n      const { reachedBottom } = this.state;\r\n\r\n      return (\r\n        <>\r\n          <Component {...this.props} reachedBottom={reachedBottom} />\r\n          <div style={{ height: 1 }} ref={this.getScrollerRef} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  withInfiniteScrolling.displayName = `withInfiniteScrolling(${getDisplayName(Component)})`;\r\n\r\n  return withInfiniteScrolling;\r\n};\r\n","export default Component => Component.displayName || Component.name || 'Component';\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\n\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\nimport withInfiniteScrolling from '../components/withInfiniteScrolling';\r\nimport { getSortedMovies } from '../selectors/sortingSelector';\r\nimport { loadMore } from '../actions/movies';\r\n\r\nconst mapStateToProps = ({\r\n  movies: {\r\n    movies, fetching, viewType, error, sortingType\r\n  }\r\n}) => ({\r\n  error,\r\n  fetching,\r\n  movies: getSortedMovies({ movies, sortingType }),\r\n  activeViewType: viewType\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadMore: () => dispatch(loadMore())\r\n});\r\n\r\nexport default compose(\r\n  withInfiniteScrolling(600),\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(MoviesList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  minWidth: '8rem'\r\n};\r\n\r\nfunction StyledMenuItem({ children, ...rest }) {\r\n  return (\r\n    <MenuItem {...rest} style={styles}>\r\n      {children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nStyledMenuItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nStyledMenuItem.defaultProps = {\r\n  children: ''\r\n};\r\n\r\nexport default StyledMenuItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport StyledMenuItem from './StyledMenuItem';\r\nimport './SortingBar.sass';\r\n\r\nimport {\r\n  POPULARITY_ASC,\r\n  POPULARITY_DESC,\r\n  RELEASE_DATE_ASC,\r\n  RELEASE_DATE_DESC\r\n} from '../../selectors/sortingSelector';\r\n\r\nclass SortingBar extends PureComponent {\r\n  static propTypes = {\r\n    onSetSorting: PropTypes.func.isRequired,\r\n    activeSorting: PropTypes.string.isRequired\r\n  };\r\n\r\n  selectStyles = {\r\n    marginLeft: 10\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value } = e.target;\r\n    const { onSetSorting, activeSorting } = this.props;\r\n\r\n    if (value !== activeSorting) {\r\n      onSetSorting(value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { activeSorting } = this.props;\r\n    return (\r\n      <div className=\"sorting\">\r\n        <span className=\"sorting-label\">Sort by:</span>\r\n        <div className=\"select-wrapper\">\r\n          <Select\r\n            style={this.selectStyles}\r\n            value={activeSorting}\r\n            onChange={this.handleChange}\r\n            inputProps={{\r\n              name: 'age',\r\n              id: 'age-simple'\r\n            }}\r\n          >\r\n            <StyledMenuItem value={POPULARITY_DESC}>\r\n              Popularity <span>&uarr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={POPULARITY_ASC}>\r\n              Popularity <span>&darr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={RELEASE_DATE_DESC}>\r\n              Release Date <span>&uarr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={RELEASE_DATE_ASC}>\r\n              Release Date <span>&darr;</span>\r\n            </StyledMenuItem>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingBar;\r\n","import { connect } from 'react-redux';\r\n\r\nimport SortingBar from '../components/SortingBar/SortingBar';\r\nimport { setSorting } from '../actions/movies';\r\n\r\nconst mapStateToProps = ({ movies }) => ({\r\n  activeSorting: movies.sortingType\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSetSorting: sortingType => dispatch(setSorting(sortingType))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SortingBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ToggleItem.sass';\r\n\r\nfunction ToggleItem({\r\n  checked, onChange, id, value, children\r\n}) {\r\n  return (\r\n    <label htmlFor={id} className={`toggle-item${checked ? ' active' : ''}`}>\r\n      {children}\r\n      <input\r\n        name=\"view-type\"\r\n        id={id}\r\n        type=\"radio\"\r\n        hidden\r\n        onChange={() => onChange(value)}\r\n        checked={checked}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nToggleItem.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  children: PropTypes.any.isRequired\r\n};\r\n\r\nexport default ToggleItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ViewModule from '@material-ui/icons/ViewModule';\r\nimport ViewList from '@material-ui/icons/ViewList';\r\nimport { onlyUpdateForKeys } from 'recompose';\r\n\r\nimport ToggleItem from './ToggleItem/ToggleItem';\r\nimport './ViewToggle.sass';\r\n\r\nfunction ViewToggle({ activeViewType, onChangeView }) {\r\n  return (\r\n    <div className=\"view-toggle\">\r\n      <ToggleItem\r\n        name=\"view-type\"\r\n        id=\"toggle-list\"\r\n        onChange={onChangeView}\r\n        checked={activeViewType === 'LIST'}\r\n        value=\"LIST\"\r\n      >\r\n        <ViewList />\r\n      </ToggleItem>\r\n\r\n      <ToggleItem\r\n        name=\"view-type\"\r\n        id=\"toggle-tiles\"\r\n        onChange={onChangeView}\r\n        checked={activeViewType === 'TILES'}\r\n        value=\"TILES\"\r\n      >\r\n        <ViewModule />\r\n      </ToggleItem>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewToggle.propTypes = {\r\n  activeViewType: PropTypes.string.isRequired,\r\n  onChangeView: PropTypes.func.isRequired\r\n};\r\n\r\nexport default onlyUpdateForKeys(['activeViewType'])(ViewToggle);\r\n","import { connect } from 'react-redux';\r\n\r\nimport ViewToggle from '../components/ViewToggle/ViewToggle';\r\nimport { setViewType } from '../actions/movies';\r\n\r\nfunction mapStateToProps({ movies }) {\r\n  return {\r\n    activeViewType: movies.viewType\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onChangeView: viewType => dispatch(setViewType(viewType))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewToggle);\r\n","import React from 'react';\r\n\r\nimport getDisplayName from '../helpers/getDisplayName';\r\n\r\nconst detectMobile = () => {\r\n  const mobiles = [\r\n    'iphone',\r\n    'ipad',\r\n    'android',\r\n    'blackberry',\r\n    'nokia',\r\n    'opera mini',\r\n    'windows mobile',\r\n    'windows phone',\r\n    'iemobile'\r\n  ];\r\n  const ua = navigator.userAgent.toLowerCase();\r\n  return mobiles.some(mobile => ua.includes(mobile));\r\n};\r\n\r\nexport default function withMobileDetection(Component) {\r\n  function WithMobileDetection(props) {\r\n    return <Component {...props} isMobile={detectMobile()} />;\r\n  }\r\n\r\n  WithMobileDetection.displayName = `withMobileDetection(${getDisplayName(Component)})`;\r\n\r\n  return WithMobileDetection;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MoviesList from '../../containers/MoviesListContainer';\r\nimport SortingBar from '../../containers/SortingBarContainer';\r\nimport ViewToggle from '../../containers/ViewToggleContainer';\r\nimport withMobileDetection from '../../components/withMobileDetection';\r\nimport './MoviesListPage.sass';\r\n\r\nfunction MoviesListPage({ isMobile }) {\r\n  return (\r\n    <>\r\n      <div className=\"actions\">\r\n        <SortingBar />\r\n        {!isMobile && <ViewToggle />}\r\n      </div>\r\n      <MoviesList />\r\n    </>\r\n  );\r\n}\r\n\r\nMoviesListPage.propTypes = {\r\n  isMobile: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withMobileDetection(MoviesListPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { shouldUpdate } from 'recompose';\r\n\r\nimport './GenreItem.sass';\r\n\r\nfunction GenreItem({ name, id, onClick }) {\r\n  return (\r\n    <ListItem\r\n      key={id}\r\n      button\r\n      component=\"li\"\r\n      onClick={() => {\r\n        onClick(id);\r\n      }}\r\n    >\r\n      <ListItemText disableTypography primary={name} className=\"genre-name\" />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nGenreItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nGenreItem.defaultProps = {\r\n  onClick: () => {}\r\n};\r\n\r\nexport default shouldUpdate(() => false)(GenreItem);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport GenreItem from './GenreItem/GenreItem';\r\nimport './GenresList.sass';\r\n\r\nfunction redirectIfNotOnMain(history, location) {\r\n  if (location.pathname !== '/') {\r\n    history.push('/');\r\n  }\r\n}\r\n\r\nclass GenreList extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const { genres, location } = this.props;\r\n\r\n    return genres !== nextProps.genres || location.pathname !== nextProps.location.pathname;\r\n  }\r\n\r\n  sideEffectsOnClick = () => {\r\n    const { history, location, clearSearchInput } = this.props;\r\n\r\n    redirectIfNotOnMain(history, location);\r\n    clearSearchInput();\r\n  };\r\n\r\n  render() {\r\n    const { getMoviesByGenre, genres } = this.props;\r\n\r\n    return (\r\n      <div className=\"genres-list\">\r\n        <div className=\"genres-label\">Genres</div>\r\n        <List onClick={this.sideEffectsOnClick}>\r\n          {genres.length > 0\r\n            ? genres.map(({ name, id }) => (\r\n              <GenreItem key={id} id={id} name={name} onClick={getMoviesByGenre} />\r\n            ))\r\n            : 'no genres'}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGenreList.propTypes = {\r\n  getMoviesByGenre: PropTypes.func,\r\n  clearSearchInput: PropTypes.func,\r\n  genres: PropTypes.array,\r\n  history: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nGenreList.defaultProps = {\r\n  getMoviesByGenre: () => {},\r\n  clearSearchInput: () => {},\r\n  genres: []\r\n};\r\n\r\nexport default GenreList;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport compose from 'recompose/compose';\r\n\r\nimport { getMoviesByGenre, setSearchText } from '../actions/movies';\r\nimport GenresList from '../components/GenresList/GenresList';\r\n\r\nconst mapStateToProps = state => ({\r\n  genres: state.movies.genres\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMoviesByGenre: genreId => dispatch(getMoviesByGenre(genreId)),\r\n  clearSearchInput: () => dispatch(setSearchText(''))\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(GenresList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Sidebar.sass';\r\n\r\nfunction Sidebar({\r\n  children, isMobile, isOpen, onClose\r\n}) {\r\n  const sidebarClasses = `sidebar${isMobile ? ' mobile' : ''}${isOpen ? ' open' : ''}`;\r\n  return (\r\n    <div className={sidebarClasses} onClick={onClose} role=\"navigation\">\r\n      <button type=\"button\" className=\"close-btn\" onClick={onClose}>\r\n        &times;\r\n      </button>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  children: PropTypes.any,\r\n  isMobile: PropTypes.bool.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  children: ''\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Content.sass';\r\n\r\nfunction Content({ children }) {\r\n  return <div className=\"content\">{children}</div>;\r\n}\r\n\r\nContent.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nContent.defaultProps = {\r\n  children: ''\r\n};\r\n\r\nexport default Content;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport './Form.sass';\r\n\r\n// styles for material ui input\r\nconst styles = () => ({\r\n  input: {\r\n    color: 'white'\r\n  },\r\n  formControl: {\r\n    marginBottom: 6,\r\n    flexDirection: 'row',\r\n    flexBasis: 300\r\n  },\r\n  cssLabel: {\r\n    color: 'white',\r\n    '&$cssFocused': {\r\n      color: 'white'\r\n    }\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    '&:after': {\r\n      borderBottomColor: 'white'\r\n    },\r\n    borderBottomColor: 'white',\r\n    '&:before': {\r\n      borderBottomColor: 'white'\r\n    }\r\n  }\r\n});\r\n\r\nclass Form extends PureComponent {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onInputChange: PropTypes.func.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    searchText: PropTypes.string.isRequired\r\n  };\r\n\r\n  onChange = e => {\r\n    const { value } = e.target;\r\n    const { onInputChange } = this.props;\r\n\r\n    onInputChange(value);\r\n  };\r\n\r\n  onSubmit = e => {\r\n    const { onSubmit, history, location } = this.props;\r\n    const { searchText } = this.props;\r\n    e.preventDefault();\r\n\r\n    if (!searchText) return;\r\n\r\n    if (typeof onSubmit === 'function') {\r\n      onSubmit(searchText);\r\n    }\r\n\r\n    if (location.pathname !== '/') {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, searchText } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"search-form\">\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel\r\n            htmlFor=\"search-input\"\r\n            classes={{\r\n              root: classes.cssLabel,\r\n              focused: classes.cssFocused\r\n            }}\r\n          >\r\n            Search\r\n          </InputLabel>\r\n          <Input\r\n            onChange={this.onChange}\r\n            type=\"search\"\r\n            value={searchText}\r\n            name=\"search-input\"\r\n            id=\"search-input\"\r\n            fullWidth\r\n            classes={{\r\n              underline: classes.cssUnderline\r\n            }}\r\n            className={classes.input}\r\n          />\r\n        </FormControl>\r\n        <IconButton type=\"submit\" aria-label=\"search\">\r\n          <SearchIcon className=\"search-icon\" />\r\n        </IconButton>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Form);\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { getMoviesByName, setSearchText } from '../actions/movies';\r\nimport Form from '../components/Form/Form';\r\n\r\nconst mapStateToProps = ({ movies }) => ({\r\n  searchText: movies.searchText\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: name => dispatch(getMoviesByName(name)),\r\n  onInputChange: text => dispatch(setSearchText(text))\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Form)\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport onlyUpdateForKeys from 'recompose/onlyUpdateForKeys';\r\nimport Menu from '@material-ui/icons/Menu';\r\n\r\nimport FormContainer from '../../containers/FormContainer';\r\nimport logo from '../../img/logo.png';\r\nimport './Header.sass';\r\n\r\nfunction Header({ isMobile, toggleSidebar }) {\r\n  if (isMobile) {\r\n    return (\r\n      <header className=\"header mobile\">\r\n        <FormContainer />\r\n        <button className=\"menu-button\" type=\"button\" onClick={toggleSidebar}>\r\n          <Menu className=\"menu-icon\" />\r\n        </button>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"logo\" className=\"logo\" />\r\n      </Link>\r\n      <FormContainer />\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  isMobile: PropTypes.bool.isRequired,\r\n  toggleSidebar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default onlyUpdateForKeys(['isMobile'])(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ActivityGauge from '../../components/ActivityGauge/ActivityGauge';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { fetchMovie } from '../../api/apiCalls';\r\nimport './MoviePage.sass';\r\n\r\nclass MoviePage extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.object.isRequired\r\n  };\r\n\r\n  loaderWrapperStyles = {\r\n    minHeight: 'calc(100vh - 160px)'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fethcing: true,\r\n      hasError: false,\r\n      movie: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n\r\n    fetchMovie(params.id)\r\n      .then(movie => {\r\n        this.setState({\r\n          movie,\r\n          fethcing: false,\r\n          hasError: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n\r\n        this.setState({\r\n          hasError: error.message\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { hasError, fethcing, movie } = this.state;\r\n\r\n    if (hasError) {\r\n      return <div className=\"error-message\">Something went wrong. {hasError}</div>;\r\n    }\r\n\r\n    if (fethcing) {\r\n      return <Loader wrapperStyle={this.loaderWrapperStyles} />;\r\n    }\r\n\r\n    const {\r\n      budget,\r\n      genres,\r\n      title,\r\n      release_date,\r\n      poster_path,\r\n      runtime,\r\n      status,\r\n      overview,\r\n      vote_average\r\n    } = movie;\r\n    const genresName = genres.map(genre => genre.name);\r\n\r\n    const posterUrl = poster_path\r\n      ? `http://image.tmdb.org/t/p/original/${poster_path}`\r\n      : 'https://via.placeholder.com/400x600/0000FF/808080';\r\n\r\n    return (\r\n      <div className=\"movie\">\r\n        <div className=\"poster-wrapper\">\r\n          <img className=\"poster\" src={posterUrl} alt={`${title} poster`} />\r\n        </div>\r\n\r\n        <section className=\"movie-info\">\r\n          <div className=\"info-header\">\r\n            <div className=\"popularity\">\r\n              <ActivityGauge value={vote_average} />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"movie-name\">{title}</h3>\r\n              <span className=\"release-date\">({release_date.substr(0, 4)})</span>\r\n              <div className=\"status\">\r\n                <output>{status}</output>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <dl className=\"info-list\">\r\n            <dt>Runtime</dt>\r\n            <dd>{runtime}m</dd>\r\n\r\n            <dt>Genres</dt>\r\n            <dd>{genresName.join(', ')}</dd>\r\n\r\n            <dt>Budget</dt>\r\n            <dd>{budget}$</dd>\r\n\r\n            {overview && (\r\n              <>\r\n                <dt>Overview</dt>\r\n                <dd>{overview}</dd>\r\n              </>\r\n            )}\r\n          </dl>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviePage;\r\n","import React from 'react';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NotFound.sass';\r\n\r\nconst iconStyles = { width: '10rem', height: '10rem' };\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <div className=\"message\">\r\n        <BugReport style={iconStyles} />\r\n        <h2>Page not found</h2>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Home\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport arrow from '../../img/arrow-up.svg';\r\nimport './GoUp.sass';\r\n\r\nclass GoUp extends PureComponent {\r\n  state = {\r\n    visible: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('wheel', this.onWheel);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('wheel', this.onWheel);\r\n  }\r\n\r\n  onWheel = e => {\r\n    const { visible } = this.state;\r\n    const { scrollY } = window;\r\n\r\n    if ((e.deltaY > 0 && visible) || scrollY < 1000) {\r\n      this.setState({\r\n        visible: false\r\n      });\r\n    } else if (e.deltaY < 0 && !visible && scrollY > 1000) {\r\n      this.setState({\r\n        visible: true\r\n      });\r\n    }\r\n  };\r\n\r\n  onClick = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={`go-up-button${!visible ? ' hide' : ''}`}\r\n        onClick={this.onClick}\r\n      >\r\n        <img src={arrow} alt=\"arrow up\" className=\"go-up-icon\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoUp;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MoviesListPage from '../../pages/MoviesListPage/MoviesListPage';\r\nimport GenresList from '../../containers/GenresListContainer';\r\nimport withMobileDetection from '../withMobileDetection';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Content from '../Content/Content';\r\nimport Header from '../Header/Header';\r\nimport MoviePage from '../../pages/MoviePage/MoviePage';\r\nimport NotFound from '../NotFound/NotFound';\r\nimport GoUp from '../GoUp/GoUp';\r\nimport './App.sass';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSidebarOpen: false\r\n    };\r\n  }\r\n\r\n  closeSidebar = () => {\r\n    this.setState({\r\n      isSidebarOpen: false\r\n    });\r\n  };\r\n\r\n  toggleSidebar = () => {\r\n    this.setState(state => ({\r\n      isSidebarOpen: !state.isSidebarOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { isMobile } = this.props;\r\n    const { isSidebarOpen } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <GoUp />\r\n        <Header isMobile={isMobile} toggleSidebar={this.toggleSidebar} />\r\n        <Sidebar isMobile={isMobile} isOpen={isSidebarOpen} onClose={this.closeSidebar}>\r\n          <GenresList />\r\n        </Sidebar>\r\n        <Content>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={MoviesListPage} />\r\n            <Route path=\"/movie/:id\" render={props => <MoviePage {...props} />} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Content>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  isMobile: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withMobileDetection(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport store from './store';\r\nimport App from './components/App/App';\r\nimport { getMoviesByPopularity } from './actions/movies';\r\nimport './index.sass';\r\n\r\nstore.dispatch(getMoviesByPopularity());\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router basename={process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : ''}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}