{"version":3,"sources":["components/ActivityGauge/ActivityGauge.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/withInfiniteScrolling.js","containers/MoviesListContainer.js","components/SortingBar/StyledMenuItem.js","components/SortingBar/SortingBar.js","containers/SortingBarContainer.js","components/ViewToggle/ToggleItem/ToggleItem.js","components/ViewToggle/ViewToggle.js","containers/ViewToggleContainer.js","pages/MoviesListPage/MoviesListPage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","highcharts__WEBPACK_IMPORTED_MODULE_1__","highcharts__WEBPACK_IMPORTED_MODULE_1___default","highcharts_modules_solid_gauge__WEBPACK_IMPORTED_MODULE_2__","highcharts_modules_solid_gauge__WEBPACK_IMPORTED_MODULE_2___default","highcharts_highcharts_more__WEBPACK_IMPORTED_MODULE_3__","highcharts_highcharts_more__WEBPACK_IMPORTED_MODULE_3___default","highcharts_react_official__WEBPACK_IMPORTED_MODULE_4__","highcharts_react_official__WEBPACK_IMPORTED_MODULE_4___default","HCMore","Highcharts","SolidGauge","ActivityGauge","_ref","value","options","chart","type","height","backgroundColor","className","margin","title","text","tooltip","enabled","pane","startAngle","endAngle","background","outerRadius","innerRadius","Color","getOptions","colors","setOpacity","get","borderWidth","yAxis","min","max","lineWidth","tickPositions","plotOptions","solidgauge","dataLabels","defer","y","x","color","useHTML","style","fontSize","linecap","rounded","series","name","data","radius","a","createElement","highcharts","allowChartUpdate","MovieCard","_this$props$movie","this","props","movie","poster_path","release_date","overview","id","vote_average","releaseDate","moment","format","movieOverview","length","concat","substr","posterUrl","react_default","src","alt","Link","to","Component","MoviesList","prevProps","_this$props","reachedBottom","loadMore","_this$props2","movies","fetching","activeViewType","error","Loader","verticalCenter","Fragment","toLowerCase","map","components_MovieCard_MovieCard","key","PureComponent","defaultProps","trashold","compose","withInfiniteScrolling","_PureComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onScroll","availDocumentHeight","document","documentElement","clientHeight","distanceToBottom","scroller","getBoundingClientRect","bottom","state","setState","getScrollerRef","node","inherits","createClass","window","addEventListener","removeEventListener","assign","ref","displayName","getDisplayName","connect","_ref$movies","viewType","sortingType","getSortedMovies","dispatch","styles","display","justifyContent","minWidth","StyledMenuItem","children","rest","objectWithoutProperties","MenuItem_default","SortingBar","selectStyles","marginLeft","handleChange","e","target","onSetSorting","activeSorting","Select_default","onChange","inputProps","SortingBar_StyledMenuItem","POPULARITY_DESC","POPULARITY_ASC","RELEASE_DATE_DESC","RELEASE_DATE_ASC","setSorting","ToggleItem","checked","htmlFor","hidden","onlyUpdateForKeys","onChangeView","ViewToggle_ToggleItem_ToggleItem","ViewList_default","ViewModule_default","setViewType","ViewToggle","withMobileDetection","isMobile","SortingBarContainer","ViewToggleContainer","MoviesListContainer"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,KAAAQ,EAAAR,EAAAE,EAAAK,GAAAE,EAAAT,EAAA,KAAAU,EAAAV,EAAAE,EAAAO,GAOAE,IAAOC,KACPC,IAAWD,KAoFIE,IAlFf,SAAAC,GAAkC,IAATC,EAASD,EAATC,MAEjBC,EAAU,CACdC,MAAO,CACLC,KAAM,aACNC,OAAQ,OACRC,gBAAiB,OACjBC,UAAW,WACXC,OAAQ,CAAC,EAAG,EAAG,EAAG,IAGpBC,MAAO,CACLC,KAAM,IAGRC,QAAS,CACPC,SAAS,GAGXC,KAAM,CACJC,WAAY,EACZC,SAAU,IACVC,WAAY,CAEVC,YAAa,MACbC,YAAa,MACbZ,gBAAiBT,IAAWsB,MAAMtB,IAAWuB,aAAaC,OAAO,IAC9DC,WAAW,IACXC,MACHC,YAAa,IAIjBC,MAAO,CACLC,IAAK,EACLC,IAAK,GACLC,UAAW,EACXC,cAAe,IAGjBC,YAAa,CACXC,WAAY,CACVC,WAAY,CACVpB,SAAS,EACTN,gBAAiB,OACjBkB,YAAa,EACbS,OAAO,EACPC,GAAI,GACJC,GAAI,EACJC,MAAOvC,IAAWuB,aAAaC,OAAO,GACtCgB,SAAS,EACTC,MAAO,CACLC,SAAU,WAGdC,QAAS,QACTC,SAAS,IAIbC,OAAQ,CACN,CACEC,KAAM,aACNC,KAAM,CACJ,CACER,MAAOvC,IAAWuB,aAAaC,OAAO,GACtCwB,OAAQ,MACR3B,YAAa,MACbgB,EAAGjC,OAOb,OAAOf,EAAA4D,EAAAC,cAACpD,EAAAmD,EAAD,CAAiBE,WAAYnD,IAAYK,QAASA,EAAS+C,kBAAkB,0SCzBvEC,0MAlDX,OAAO,mCAGA,IAAAC,EAKHC,KAAKC,MAHPC,MACEC,EAHGJ,EAGHI,YAAa9C,EAHV0C,EAGU1C,MAAO+C,EAHjBL,EAGiBK,aAAcC,EAH/BN,EAG+BM,SAAUC,EAHzCP,EAGyCO,GAAIC,EAH7CR,EAG6CQ,aAI9CC,EAAcJ,EAAeK,IAAOL,GAAcM,OAAO,gBAAkB,KAC3EC,EAAgBN,EAASO,OAAS,IAAlB,GAAAC,OAA2BR,EAASS,OAAO,EAAG,IAA9C,OAAyDT,EACzEU,EAAYZ,EAAW,kCAAAU,OACSV,GAClC,oDAEJ,OACEa,EAAAtB,EAAAC,cAAA,WAASxC,UAAU,cACjB6D,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,UACb6D,EAAAtB,EAAAC,cAAA,OAAKsB,IAAKF,EAAWG,IAAK7D,EAAOF,UAAU,kBAG7C6D,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,QACb6D,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,iBACb6D,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,cACb6D,EAAAtB,EAAAC,cAAChD,EAAA,EAAD,CAAeE,MAAO0D,KAExBS,EAAAtB,EAAAC,cAAA,WACEqB,EAAAtB,EAAAC,cAAA,MAAIxC,UAAU,SAASE,GACtBmD,GAAeQ,EAAAtB,EAAAC,cAAA,QAAMxC,UAAU,gBAAgBqD,KAIpDQ,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,eAAewD,GAE9BK,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,aACb6D,EAAAtB,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAE,UAAAP,OAAYP,GAAMnD,UAAU,kBAApC,uBAtCYkE,cCDlBC,qMAgBeC,GAAW,IAAAC,EACQxB,KAAKC,MAAjCwB,EADoBD,EACpBC,cAAeC,EADKF,EACLE,UAElBH,EAAUE,eAAiBA,GAC9BC,qCAIK,IAAAC,EAGH3B,KAAKC,MADP2B,EAFKD,EAELC,OAAQC,EAFHF,EAEGE,SAAUC,EAFbH,EAEaG,eAAgBC,EAF7BJ,EAE6BI,MAGpC,OAAIF,IAAaD,EAAOhB,OAAS,EACxBI,EAAAtB,EAAAC,cAACqC,EAAA,EAAD,CAAQC,gBAAc,IAI7BjB,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAAwC,SAAA,KACElB,EAAAtB,EAAAC,cAAA,OAAKxC,UAAS,eAAA0D,OAAiBiB,EAAeK,gBAC3CP,EAAOhB,OAAS,EACbgB,EAAOQ,IAAI,SAAAlC,GAAK,OAAIc,EAAAtB,EAAAC,cAAC0C,EAAD,CAAWC,IAAKpC,EAAMI,GAAIJ,MAAOA,OACpD2B,IAAaE,GAAS,oBAE5BA,EAAQf,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,iBAAf,yBAA6D,KACrE0E,EAAWb,EAAAtB,EAAAC,cAACqC,EAAA,EAAD,MAAa,aAzCRO,kBAAnBjB,EAUGkB,aAAe,CACpBZ,OAAQ,GACRH,eAAe,EACfC,SAAU,cAkCCJ,IClDAmB,EDkDAnB,4BE/BAoB,eDnBAD,ECoBS,IDpBG,SAAApB,GAAa,IAChCsB,EADgC,SAAAC,GAEpC,SAAAD,EAAY1C,GAAO,IAAA4C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9C,KAAA2C,IACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAA9C,KAAA8C,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAlD,KAAMC,KAiBRkD,SAAW,WACT,IAAMC,EAAsBC,SAASC,gBAAgBC,aAC/CC,EAAmBX,EAAKY,SAASC,wBAAwBC,OAASP,EAChE3B,EAAkBoB,EAAKe,MAAvBnC,cAEJ+B,EAAmBf,IAAahB,EAClCoB,EAAKgB,SAAS,CAAEpC,eAAe,IACtB+B,EAAmBf,GAAYhB,GACxCoB,EAAKgB,SAAS,CAAEpC,eAAe,KA1BhBoB,EA8BnBiB,eAAiB,SAAAC,GACflB,EAAKY,SAAWM,GA5BhBlB,EAAKe,MAAQ,CACXnC,eAAe,GAJAoB,EAFiB,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAH,EAAAC,GAAAE,OAAAmB,EAAA,EAAAnB,CAAAH,EAAA,EAAAL,IAAA,oBAAAzF,MAAA,WAW9BmD,KAAKyD,UACPS,OAAOC,iBAAiB,SAAUnE,KAAKmD,YAZP,CAAAb,IAAA,uBAAAzF,MAAA,WAiBlCqH,OAAOE,oBAAoB,SAAUpE,KAAKmD,YAjBR,CAAAb,IAAA,SAAAzF,MAAA,WAoC3B,IACC4E,EAAkBzB,KAAK4D,MAAvBnC,cAER,OACET,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAAwC,SAAA,KACElB,EAAAtB,EAAAC,cAAC0B,EAADyB,OAAAuB,OAAA,GAAerE,KAAKC,MAApB,CAA2BwB,cAAeA,KAC1CT,EAAAtB,EAAAC,cAAA,OAAKT,MAAO,CAAEjC,OAAQ,GAAKqH,IAAKtE,KAAK8D,sBA1CPnB,EAAA,CACFJ,iBAiDpC,OAFAI,EAAsB4B,YAAtB,yBAAA1D,OAA6D2D,YAAenD,GAA5E,KAEOsB,IC7BP8B,YAjBsB,SAAA7H,GAAA,IAAA8H,EAAA9H,EACtBgF,OACEA,EAFoB8C,EAEpB9C,OAAQC,EAFY6C,EAEZ7C,SAAU8C,EAFED,EAEFC,SAAU5C,EAFR2C,EAEQ3C,MAAO6C,EAFfF,EAEeE,YAFf,MAIjB,CACL7C,QACAF,WACAD,OAAQiD,YAAgB,CAAEjD,SAAQgD,gBAClC9C,eAAgB6C,IAGS,SAAAG,GAAQ,MAAK,CACtCpD,SAAU,kBAAMoD,EAASpD,mBAGZgB,CAMbpB,gDCzBIyD,EAAS,CACbC,QAAS,OACTC,eAAgB,gBAChBC,SAAU,QAGZ,SAASC,EAATvI,GAA+C,IAArBwI,EAAqBxI,EAArBwI,SAAaC,EAAQvC,OAAAwC,EAAA,EAAAxC,CAAAlG,EAAA,cAC7C,OACEoE,EAAAtB,EAAAC,cAAC4F,EAAA7F,EAADoD,OAAAuB,OAAA,GAAcgB,EAAd,CAAoBnG,MAAO6F,IACxBK,GASPD,EAAe3C,aAAe,CAC5B4C,SAAU,IAGGD,QCyCAK,qNA/CbC,aAAe,CACbC,WAAY,MAGdC,aAAe,SAAAC,GAAK,IACV/I,EAAU+I,EAAEC,OAAZhJ,MADU2E,EAEsBqB,EAAK5C,MAArC6F,EAFUtE,EAEVsE,aAEJjJ,IAJc2E,EAEIuE,eAGpBD,EAAajJ,4EAIR,IACCkJ,EAAkB/F,KAAKC,MAAvB8F,cACR,OACE/E,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,WACb6D,EAAAtB,EAAAC,cAAA,QAAMxC,UAAU,iBAAhB,YACA6D,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,kBACb6D,EAAAtB,EAAAC,cAACqG,EAAAtG,EAAD,CACER,MAAOc,KAAKyF,aACZ5I,MAAOkJ,EACPE,SAAUjG,KAAK2F,aACfO,WAAY,CACV3G,KAAM,MACNe,GAAI,eAGNU,EAAAtB,EAAAC,cAACwG,EAAD,CAAgBtJ,MAAOuJ,KAAvB,cACapF,EAAAtB,EAAAC,cAAA,uBAEbqB,EAAAtB,EAAAC,cAACwG,EAAD,CAAgBtJ,MAAOwJ,KAAvB,cACarF,EAAAtB,EAAAC,cAAA,uBAEbqB,EAAAtB,EAAAC,cAACwG,EAAD,CAAgBtJ,MAAOyJ,KAAvB,gBACetF,EAAAtB,EAAAC,cAAA,uBAEfqB,EAAAtB,EAAAC,cAACwG,EAAD,CAAgBtJ,MAAO0J,KAAvB,gBACevF,EAAAtB,EAAAC,cAAA,iCA5CF4C,kBCDVkC,cARS,SAAA7H,GAAA,MAAiB,CACvCmJ,cADsBnJ,EAAGgF,OACHgD,cAGG,SAAAE,GAAQ,MAAK,CACtCgB,aAAc,SAAAlB,GAAW,OAAIE,EAAS0B,YAAW5B,OAGpCH,CAGbe,8CCeaiB,MA1Bf,SAAA7J,GAEG,IADD8J,EACC9J,EADD8J,QAAST,EACRrJ,EADQqJ,SAAU3F,EAClB1D,EADkB0D,GAAIzD,EACtBD,EADsBC,MAAOuI,EAC7BxI,EAD6BwI,SAE9B,OACEpE,EAAAtB,EAAAC,cAAA,SAAOgH,QAASrG,EAAInD,UAAS,cAAA0D,OAAgB6F,EAAU,UAAY,KAChEtB,EACDpE,EAAAtB,EAAAC,cAAA,SACEJ,KAAK,YACLe,GAAIA,EACJtD,KAAK,QACL4J,QAAM,EACNX,SAAU,kBAAMA,EAASpJ,IACzB6J,QAASA,aCuBFG,kBAAkB,CAAC,kBAAnBA,CA/Bf,SAAAjK,GAAsD,IAAhCkF,EAAgClF,EAAhCkF,eAAgBgF,EAAgBlK,EAAhBkK,aACpC,OACE9F,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,eACb6D,EAAAtB,EAAAC,cAACoH,EAAD,CACExH,KAAK,YACLe,GAAG,cACH2F,SAAUa,EACVJ,QAA4B,SAAnB5E,EACTjF,MAAM,QAENmE,EAAAtB,EAAAC,cAACqH,EAAAtH,EAAD,OAGFsB,EAAAtB,EAAAC,cAACoH,EAAD,CACExH,KAAK,YACLe,GAAG,eACH2F,SAAUa,EACVJ,QAA4B,UAAnB5E,EACTjF,MAAM,SAENmE,EAAAtB,EAAAC,cAACsH,EAAAvH,EAAD,UCZO+E,kBAZf,SAAA7H,GACE,MAAO,CACLkF,eAFiClF,EAAVgF,OAEA+C,WAI3B,SAA4BG,GAC1B,MAAO,CACLgC,aAAc,SAAAnC,GAAQ,OAAIG,EAASoC,YAAYvC,OAIpCF,CAGb0C,mBCKaC,sBAhBf,SAAAxK,GAAsC,IAAZyK,EAAYzK,EAAZyK,SACxB,OACErG,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAAwC,SAAA,KACElB,EAAAtB,EAAAC,cAAA,OAAKxC,UAAU,WACb6D,EAAAtB,EAAAC,cAAC2H,EAAD,OACED,GAAYrG,EAAAtB,EAAAC,cAAC4H,EAAD,OAEhBvG,EAAAtB,EAAAC,cAAC6H,EAAD","file":"static/js/2.c9c83e1d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Highcharts from 'highcharts';\r\nimport SolidGauge from 'highcharts/modules/solid-gauge';\r\nimport HCMore from 'highcharts/highcharts-more';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nHCMore(Highcharts);\r\nSolidGauge(Highcharts);\r\n\r\nfunction ActivityGauge({ value }) {\r\n  // Settings for chart\r\n  const options = {\r\n    chart: {\r\n      type: 'solidgauge',\r\n      height: '100%',\r\n      backgroundColor: 'none',\r\n      className: 'activity',\r\n      margin: [0, 0, 0, 0]\r\n    },\r\n\r\n    title: {\r\n      text: ''\r\n    },\r\n\r\n    tooltip: {\r\n      enabled: false\r\n    },\r\n\r\n    pane: {\r\n      startAngle: 0,\r\n      endAngle: 360,\r\n      background: {\r\n        // Track for Move\r\n        outerRadius: '95%',\r\n        innerRadius: '70%',\r\n        backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0])\r\n          .setOpacity(0.3)\r\n          .get(),\r\n        borderWidth: 0\r\n      }\r\n    },\r\n\r\n    yAxis: {\r\n      min: 0,\r\n      max: 10,\r\n      lineWidth: 0,\r\n      tickPositions: []\r\n    },\r\n\r\n    plotOptions: {\r\n      solidgauge: {\r\n        dataLabels: {\r\n          enabled: true,\r\n          backgroundColor: 'none',\r\n          borderWidth: 0,\r\n          defer: true,\r\n          y: -14,\r\n          x: -1,\r\n          color: Highcharts.getOptions().colors[0],\r\n          useHTML: true,\r\n          style: {\r\n            fontSize: '0.8rem'\r\n          }\r\n        },\r\n        linecap: 'round',\r\n        rounded: true\r\n      }\r\n    },\r\n\r\n    series: [\r\n      {\r\n        name: 'Popularity',\r\n        data: [\r\n          {\r\n            color: Highcharts.getOptions().colors[0],\r\n            radius: '95%',\r\n            innerRadius: '70%',\r\n            y: value\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return <HighchartsReact highcharts={Highcharts} options={options} allowChartUpdate={false} />;\r\n}\r\n\r\nActivityGauge.propTypes = {\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ActivityGauge;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport ActivityGauge from '../ActivityGauge/ActivityGauge';\r\nimport './MovieCard.sass';\r\n\r\nclass MovieCard extends Component {\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      movie: {\r\n        poster_path, title, release_date, overview, id, vote_average\r\n      }\r\n    } = this.props;\r\n\r\n    const releaseDate = release_date ? moment(release_date).format('MMMM D, YYYY') : null;\r\n    const movieOverview = overview.length > 100 ? `${overview.substr(0, 97)}...` : overview;\r\n    const posterUrl = poster_path\r\n      ? `http://image.tmdb.org/t/p/w185/${poster_path}`\r\n      : 'https://via.placeholder.com/185x278/0000FF/808080';\r\n\r\n    return (\r\n      <article className=\"movie-card\">\r\n        <div className=\"poster\">\r\n          <img src={posterUrl} alt={title} className=\"poster-image\" />\r\n        </div>\r\n\r\n        <div className=\"info\">\r\n          <div className=\"title-wrapper\">\r\n            <div className=\"popularity\">\r\n              <ActivityGauge value={vote_average} />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"title\">{title}</h3>\r\n              {releaseDate && <time className=\"release-date\">{releaseDate}</time>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"description\">{movieOverview}</div>\r\n\r\n          <div className=\"more-info\">\r\n            <Link to={`/movie/${id}`} className=\"more-info-link\">\r\n              More info\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport './MoviesList.sass';\r\n\r\nclass MoviesList extends PureComponent {\r\n  static propTypes = {\r\n    movies: PropTypes.array,\r\n    fetching: PropTypes.bool.isRequired,\r\n    activeViewType: PropTypes.string.isRequired,\r\n    error: PropTypes.bool.isRequired,\r\n    reachedBottom: PropTypes.bool,\r\n    loadMore: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    movies: [],\r\n    reachedBottom: false,\r\n    loadMore: () => {}\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { reachedBottom, loadMore } = this.props;\r\n\r\n    if (!prevProps.reachedBottom && reachedBottom) {\r\n      loadMore();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      movies, fetching, activeViewType, error\r\n    } = this.props;\r\n\r\n    if (fetching && !movies.length > 0) {\r\n      return <Loader verticalCenter />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={`movies-list ${activeViewType.toLowerCase()}`}>\r\n          {movies.length > 0\r\n            ? movies.map(movie => <MovieCard key={movie.id} movie={movie} />)\r\n            : !fetching && !error && 'Movies not found'}\r\n        </div>\r\n        {error ? <div className=\"error-message\">Something went wrong!</div> : null}\r\n        {fetching ? <Loader /> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesList;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport getDisplayName from '../helpers/getDisplayName';\r\n\r\nexport default trashold => Component => {\r\n  class withInfiniteScrolling extends PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        reachedBottom: false\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      if (this.scroller) {\r\n        window.addEventListener('scroll', this.onScroll);\r\n      }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n      const availDocumentHeight = document.documentElement.clientHeight;\r\n      const distanceToBottom = this.scroller.getBoundingClientRect().bottom - availDocumentHeight;\r\n      const { reachedBottom } = this.state;\r\n\r\n      if (distanceToBottom < trashold && !reachedBottom) {\r\n        this.setState({ reachedBottom: true });\r\n      } else if (distanceToBottom > trashold && reachedBottom) {\r\n        this.setState({ reachedBottom: false });\r\n      }\r\n    };\r\n\r\n    getScrollerRef = node => {\r\n      this.scroller = node;\r\n    };\r\n\r\n    render() {\r\n      const { reachedBottom } = this.state;\r\n\r\n      return (\r\n        <>\r\n          <Component {...this.props} reachedBottom={reachedBottom} />\r\n          <div style={{ height: 1 }} ref={this.getScrollerRef} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  withInfiniteScrolling.displayName = `withInfiniteScrolling(${getDisplayName(Component)})`;\r\n\r\n  return withInfiniteScrolling;\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'recompose';\r\n\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\nimport withInfiniteScrolling from '../components/withInfiniteScrolling';\r\nimport { getSortedMovies } from '../selectors/sortingSelector';\r\nimport { loadMore } from '../actions/movies';\r\n\r\nconst mapStateToProps = ({\r\n  movies: {\r\n    movies, fetching, viewType, error, sortingType\r\n  }\r\n}) => ({\r\n  error,\r\n  fetching,\r\n  movies: getSortedMovies({ movies, sortingType }),\r\n  activeViewType: viewType\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadMore: () => dispatch(loadMore())\r\n});\r\n\r\nexport default compose(\r\n  withInfiniteScrolling(600),\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(MoviesList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  minWidth: '8rem'\r\n};\r\n\r\nfunction StyledMenuItem({ children, ...rest }) {\r\n  return (\r\n    <MenuItem {...rest} style={styles}>\r\n      {children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nStyledMenuItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nStyledMenuItem.defaultProps = {\r\n  children: ''\r\n};\r\n\r\nexport default StyledMenuItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport StyledMenuItem from './StyledMenuItem';\r\nimport './SortingBar.sass';\r\n\r\nimport {\r\n  POPULARITY_ASC,\r\n  POPULARITY_DESC,\r\n  RELEASE_DATE_ASC,\r\n  RELEASE_DATE_DESC\r\n} from '../../selectors/sortingSelector';\r\n\r\nclass SortingBar extends PureComponent {\r\n  static propTypes = {\r\n    onSetSorting: PropTypes.func.isRequired,\r\n    activeSorting: PropTypes.string.isRequired\r\n  };\r\n\r\n  selectStyles = {\r\n    marginLeft: 10\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value } = e.target;\r\n    const { onSetSorting, activeSorting } = this.props;\r\n\r\n    if (value !== activeSorting) {\r\n      onSetSorting(value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { activeSorting } = this.props;\r\n    return (\r\n      <div className=\"sorting\">\r\n        <span className=\"sorting-label\">Sort by:</span>\r\n        <div className=\"select-wrapper\">\r\n          <Select\r\n            style={this.selectStyles}\r\n            value={activeSorting}\r\n            onChange={this.handleChange}\r\n            inputProps={{\r\n              name: 'age',\r\n              id: 'age-simple'\r\n            }}\r\n          >\r\n            <StyledMenuItem value={POPULARITY_DESC}>\r\n              Popularity <span>&uarr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={POPULARITY_ASC}>\r\n              Popularity <span>&darr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={RELEASE_DATE_DESC}>\r\n              Release Date <span>&uarr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={RELEASE_DATE_ASC}>\r\n              Release Date <span>&darr;</span>\r\n            </StyledMenuItem>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingBar;\r\n","import { connect } from 'react-redux';\r\n\r\nimport SortingBar from '../components/SortingBar/SortingBar';\r\nimport { setSorting } from '../actions/movies';\r\n\r\nconst mapStateToProps = ({ movies }) => ({\r\n  activeSorting: movies.sortingType\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSetSorting: sortingType => dispatch(setSorting(sortingType))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SortingBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ToggleItem.sass';\r\n\r\nfunction ToggleItem({\r\n  checked, onChange, id, value, children\r\n}) {\r\n  return (\r\n    <label htmlFor={id} className={`toggle-item${checked ? ' active' : ''}`}>\r\n      {children}\r\n      <input\r\n        name=\"view-type\"\r\n        id={id}\r\n        type=\"radio\"\r\n        hidden\r\n        onChange={() => onChange(value)}\r\n        checked={checked}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nToggleItem.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  children: PropTypes.any.isRequired\r\n};\r\n\r\nexport default ToggleItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ViewModule from '@material-ui/icons/ViewModule';\r\nimport ViewList from '@material-ui/icons/ViewList';\r\nimport { onlyUpdateForKeys } from 'recompose';\r\n\r\nimport ToggleItem from './ToggleItem/ToggleItem';\r\nimport './ViewToggle.sass';\r\n\r\nfunction ViewToggle({ activeViewType, onChangeView }) {\r\n  return (\r\n    <div className=\"view-toggle\">\r\n      <ToggleItem\r\n        name=\"view-type\"\r\n        id=\"toggle-list\"\r\n        onChange={onChangeView}\r\n        checked={activeViewType === 'LIST'}\r\n        value=\"LIST\"\r\n      >\r\n        <ViewList />\r\n      </ToggleItem>\r\n\r\n      <ToggleItem\r\n        name=\"view-type\"\r\n        id=\"toggle-tiles\"\r\n        onChange={onChangeView}\r\n        checked={activeViewType === 'TILES'}\r\n        value=\"TILES\"\r\n      >\r\n        <ViewModule />\r\n      </ToggleItem>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewToggle.propTypes = {\r\n  activeViewType: PropTypes.string.isRequired,\r\n  onChangeView: PropTypes.func.isRequired\r\n};\r\n\r\nexport default onlyUpdateForKeys(['activeViewType'])(ViewToggle);\r\n","import { connect } from 'react-redux';\r\n\r\nimport ViewToggle from '../components/ViewToggle/ViewToggle';\r\nimport { setViewType } from '../actions/movies';\r\n\r\nfunction mapStateToProps({ movies }) {\r\n  return {\r\n    activeViewType: movies.viewType\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onChangeView: viewType => dispatch(setViewType(viewType))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewToggle);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MoviesList from '../../containers/MoviesListContainer';\r\nimport SortingBar from '../../containers/SortingBarContainer';\r\nimport ViewToggle from '../../containers/ViewToggleContainer';\r\nimport withMobileDetection from '../../components/withMobileDetection';\r\nimport './MoviesListPage.sass';\r\n\r\nfunction MoviesListPage({ isMobile }) {\r\n  return (\r\n    <>\r\n      <div className=\"actions\">\r\n        <SortingBar />\r\n        {!isMobile && <ViewToggle />}\r\n      </div>\r\n      <MoviesList />\r\n    </>\r\n  );\r\n}\r\n\r\nMoviesListPage.propTypes = {\r\n  isMobile: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withMobileDetection(MoviesListPage);\r\n"],"sourceRoot":""}