{"version":3,"sources":["img/logo.png","actions/movies.js","reducers/moviesReducer.js","reducers/RootReducer.js","selectors/sortingSelector.js","api/resolvedSortingTypeNames.js","api/apiCalls.js","sagas/moviesSaga.js","sagas/rootSaga.js","store.js","components/SortingBar/StyledMenuItem.js","components/SortingBar/SortingBar.js","containers/SortingBarContainer.js","components/ViewToggle/ToggleItem/ToggleItem.js","components/ViewToggle/ViewToggle.js","containers/ViewToggleContainer.js","components/withMobileDetection.js","components/Loader/Loader.js","components/ActivityGauge/ActivityGauge.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/withInfiniteScrolling.js","containers/MoviesListContainer.js","components/GenresList/GenreItem/GenreItem.js","components/GenresList/GenresList.js","containers/GenresListContainer.js","components/Sidebar/Sidebar.js","components/Content/Content.js","components/Form/Form.js","containers/FormContainer.js","components/Header/Header.js","components/MoviePage/MoviePage.js","components/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","ADD_MOVIES_SUCCESS","GET_GENRES","GET_MOVIES_BY_NAME","GET_MOVIES_BY_GENRE","GET_MOVIES_FAILED","GET_POPULAR_MOVIES","GET_MOVIES_SUCCESS","LOAD_MORE","MOVIES_REQUEST","SET_SORTING","SET_VIEW_TYPE","requestMovies","type","getMoviesSuccess","movies","URL","totalPages","getMoviesFailed","addMovies","getGenres","genres","initialState","fetching","currentPage","lastFetchURL","viewType","sortingType","error","combineReducers","state","arguments","length","undefined","Object","objectSpread","action","concat","toConsumableArray","param","getSortedMovies","createSelector","newMovies","sort","movie1","movie2","popularity","_ref","release_date","date1","date2","_ref2","resolvedSortingTypeNames","_POPULARITY_ASC$POPUL","defineProperty","axios","defaults","baseURL","apiKey","process","language","callApi","url","get","then","response","data","catch","getURLbyParams","params","page","name","genreId","formattedSorting","resolvedSortingNames","activeSorting","getPopularMovies","getMoviesByName","getMoviesByGenre","getMoreMovies","getGenresSaga","watchGettingMovies","regenerator_default","a","wrap","_context","prev","next","put","call","sent","results","total_pages","t0","console","stop","_marked","this","_context2","_marked2","_context3","select","_marked3","_ref3","nextPageURL","_context4","_ref4","abrupt","replace","_marked4","_context5","_marked5","_context6","takeLatest","_marked6","rootSaga","all","rootSaga_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","run","styles","display","justifyContent","minWidth","StyledMenuItem","children","rest","objectWithoutProperties","react_default","createElement","MenuItem_default","assign","style","defaultProps","SortingBar","handleChange","e","value","target","_this$props","_this","props","onSetSorting","className","Select_default","marginLeft","onChange","inputProps","id","SortingBar_StyledMenuItem","Component","connect","dispatch","ToggleItem","checked","htmlFor","hidden","ViewToggle","activeViewType","onChangeView","ViewToggle_ToggleItem_ToggleItem","ViewList_default","ViewModule_default","setViewType","detectMobile","ua","navigator","userAgent","toLowerCase","some","mobile","includes","withMobileDetection","WithMobileDetection","isMobile","displayName","Loader","wrapperStyle","HCMore","Highcharts","SolidGauge","ActivityGauge","options","chart","height","backgroundColor","margin","title","text","tooltip","enabled","pane","startAngle","endAngle","background","outerRadius","innerRadius","Color","getOptions","colors","setOpacity","borderWidth","yAxis","min","max","lineWidth","tickPositions","plotOptions","solidgauge","dataLabels","defer","y","x","color","useHTML","fontSize","linecap","rounded","series","radius","highcharts_react_min_default","highcharts","MovieCard","_this$props$movie","movie","poster_path","overview","vote_average","releaseDate","moment","format","movieOverview","substr","posterUrl","src","alt","ActivityGauge_ActivityGauge","Link","to","PureComponent","MoviesList","prevProps","reachedBottom","loadMore","_this$props2","components_Loader_Loader","minHeight","Fragment","SortingBarContainer","ViewToggleContainer","map","components_MovieCard_MovieCard","key","withInfiniteScrolling","trashold","_PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","onScroll","availDocumentHeight","document","documentElement","clientHeight","distanceToBottom","scroller","getBoundingClientRect","bottom","setState","getScrollerRef","node","inherits","createClass","addEventListener","removeEventListener","ref","_ref$movies","GenreItem","onClick","history","location","ListItem_default","button","component","pathname","push","ListItemText_default","disableTypography","primary","GenreList","List_default","GenresList_GenreItem_GenreItem","withRouter","GenresList","Sidebar","isOpen","onClose","sidebarClasses","role","Content","Form","cleanInput","input","_e$target","onSubmit","preventDefault","classes","FormControl_default","formControl","InputLabel_default","root","cssLabel","focused","cssFocused","Input_default","fullWidth","underline","cssUnderline","IconButton_default","aria-label","Search_default","withStyles","marginBottom","flexDirection","flexBasis","&$cssFocused","&:after","borderBottomColor","&:before","Header","toggleSidebar","FormContainer","Menu_default","logo","MoviePage","fethcing","hasError","_this2","match","message","_this$state","budget","runtime","status","genresName","genre","join","NotFound","BugReport_default","width","Button_default","variant","App","closeSidebar","isSidebarOpen","components_Header_Header","components_Sidebar_Sidebar","GenresListContainer","components_Content_Content","Switch","Route","exact","path","render","components_MoviePage_MoviePage","ReactDOM","es","BrowserRouter","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.06e8a88d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b205435e.png\";","export const ADD_MOVIES_SUCCESS = 'ADD_MOVIES_SUCCESS';\r\nexport const GET_GENRES = 'GET_GENRES';\r\nexport const GET_MOVIES_BY_NAME = 'GET_MOVIES_BY_NAME';\r\nexport const GET_MOVIES_BY_GENRE = 'GET_MOVIES_BY_GENRE';\r\nexport const GET_MOVIES_FAILED = 'GET_MOVIES_FAILED';\r\nexport const GET_POPULAR_MOVIES = 'GET_POPULAR_MOVIES';\r\nexport const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\r\nexport const LOAD_MORE = 'LOAD_MORE';\r\nexport const MOVIES_REQUEST = 'MOVIES_REQUEST';\r\nexport const SET_SORTING = 'SET_SORTING';\r\nexport const SET_VIEW_TYPE = 'SET_VIEW_TYPE';\r\n\r\nexport function setViewType(viewType) {\r\n  return {\r\n    type: SET_VIEW_TYPE,\r\n    viewType\r\n  };\r\n}\r\n\r\nexport function setSorting(param) {\r\n  return {\r\n    type: SET_SORTING,\r\n    param\r\n  };\r\n}\r\n\r\nexport function requestMovies() {\r\n  return { type: MOVIES_REQUEST };\r\n}\r\n\r\nexport function getMoviesSuccess(movies, URL, totalPages) {\r\n  return {\r\n    type: GET_MOVIES_SUCCESS,\r\n    movies,\r\n    URL,\r\n    totalPages\r\n  };\r\n}\r\n\r\nexport function getMoviesFailed() {\r\n  return { type: GET_MOVIES_FAILED };\r\n}\r\n\r\nexport function addMovies(movies) {\r\n  return {\r\n    type: ADD_MOVIES_SUCCESS,\r\n    movies\r\n  };\r\n}\r\n\r\nexport function getMoviesByName(name) {\r\n  return { type: GET_MOVIES_BY_NAME, name };\r\n}\r\n\r\nexport function getMoviesByPopularity() {\r\n  return { type: GET_POPULAR_MOVIES };\r\n}\r\n\r\nexport function getMoviesByGenre(genreId) {\r\n  return { type: GET_MOVIES_BY_GENRE, genreId };\r\n}\r\n\r\nexport function loadMore() {\r\n  return {\r\n    type: LOAD_MORE\r\n  };\r\n}\r\n\r\nexport function getGenres(genres) {\r\n  return {\r\n    type: GET_GENRES,\r\n    genres\r\n  };\r\n}\r\n","import {\r\n  SET_VIEW_TYPE,\r\n  GET_MOVIES_SUCCESS,\r\n  MOVIES_REQUEST,\r\n  SET_SORTING,\r\n  GET_MOVIES_FAILED,\r\n  ADD_MOVIES_SUCCESS,\r\n  GET_GENRES\r\n} from '../actions/movies';\r\n\r\nconst initialState = {\r\n  fetching: false,\r\n  movies: [],\r\n  currentPage: 1,\r\n  totalPages: 1000,\r\n  lastFetchURL: '',\r\n  viewType: 'LIST',\r\n  sortingType: 'POPULARITY_DESC',\r\n  error: false,\r\n  genres: []\r\n};\r\n\r\nexport default function reducer(state = { ...initialState }, action) {\r\n  switch (action.type) {\r\n    case GET_GENRES:\r\n      return { ...state, genres: action.genres };\r\n\r\n    case MOVIES_REQUEST:\r\n      return { ...state, fetching: true };\r\n\r\n    case GET_MOVIES_FAILED:\r\n      return { ...state, fetching: false, error: true };\r\n\r\n    case GET_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        movies: action.movies,\r\n        fetching: false,\r\n        error: false,\r\n        lastFetchURL: action.URL,\r\n        totalPages: action.totalPages\r\n      };\r\n\r\n    case ADD_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPage: state.currentPage + 1,\r\n        movies: [...state.movies, ...action.movies],\r\n        fetching: false,\r\n        error: false\r\n      };\r\n\r\n    case SET_SORTING:\r\n      return { ...state, sortingType: action.param };\r\n\r\n    case SET_VIEW_TYPE:\r\n      return { ...state, viewType: action.viewType };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport movies from './moviesReducer';\r\n\r\nexport default combineReducers({\r\n  movies\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const POPULARITY_DESC = 'POPULARITY_DESC';\r\nexport const POPULARITY_ASC = 'POPULARITY_ASC';\r\nexport const RELEASE_DATE_DESC = 'RELEASE_DATE_DESC';\r\nexport const RELEASE_DATE_ASC = 'RELEASE_DATE_ASC';\r\n\r\nconst getMovies = state => state.movies;\r\nconst getSortingType = state => state.sortingType;\r\n\r\nexport const getSortedMovies = createSelector(\r\n  [getMovies, getSortingType],\r\n  (movies, sortingType) => {\r\n    const newMovies = [...movies];\r\n    switch (sortingType) {\r\n      case POPULARITY_DESC:\r\n        return newMovies.sort((movie1, movie2) => movie2.popularity - movie1.popularity);\r\n\r\n      case POPULARITY_ASC:\r\n        return newMovies.sort((movie1, movie2) => movie1.popularity - movie2.popularity);\r\n\r\n      case RELEASE_DATE_DESC:\r\n        return newMovies.sort((movie1, movie2) => {\r\n          const [date1, date2] = [movie1.release_date, movie2.release_date];\r\n\r\n          if (date2 > date1) return 1;\r\n          if (date2 < date1) return -1;\r\n\r\n          return 0;\r\n        });\r\n\r\n      case RELEASE_DATE_ASC:\r\n        return newMovies.sort((movie1, movie2) => {\r\n          const [date1, date2] = [movie1.release_date, movie2.release_date];\r\n\r\n          if (date2 < date1) return 1;\r\n          if (date2 > date1) return -1;\r\n\r\n          return 0;\r\n        });\r\n\r\n      default:\r\n        return movies;\r\n    }\r\n  }\r\n);\r\n","import {\r\n  POPULARITY_ASC,\r\n  POPULARITY_DESC,\r\n  RELEASE_DATE_ASC,\r\n  RELEASE_DATE_DESC\r\n} from '../selectors/sortingSelector';\r\n\r\nexport default {\r\n  [POPULARITY_ASC]: 'popularity.asc',\r\n  [POPULARITY_DESC]: 'popularity.asc',\r\n  [RELEASE_DATE_ASC]: 'release_date.asc',\r\n  [RELEASE_DATE_DESC]: 'release_date.desc'\r\n};\r\n","import axios from 'axios';\r\n\r\nimport resolvedSortingNames from './resolvedSortingTypeNames';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconst language = '&language=ru-RU';\r\n\r\nexport function callApi(url) {\r\n  return axios\r\n    .get(url)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport function fetchMovie(id) {\r\n  const url = `/movie/${id}?api_key=${apiKey}${language}&append_to_response=videos`;\r\n\r\n  return callApi(url);\r\n}\r\n\r\n// By default returns URL for getting popular movies\r\nexport function getURLbyParams(params = {}, page = 1) {\r\n  // Getting movies by Name\r\n  if (params.name) {\r\n    return `search/movie?api_key=${apiKey}&query=${params.name}${language}&page=${page}`;\r\n  }\r\n\r\n  // Getting movies by Genre\r\n  if (params.genreId) {\r\n    const formattedSorting = resolvedSortingNames[params.activeSorting];\r\n\r\n    return `/discover/movie?api_key=${apiKey}&sort_by=${formattedSorting}${language}&page=${page}&with_genres=${\r\n      params.genreId\r\n    }`;\r\n  }\r\n\r\n  return `movie/popular?api_key=${apiKey}${language}&page=${page}`;\r\n}\r\n\r\nexport function getGenresURL() {\r\n  return `/genre/movie/list?api_key=${apiKey}${language}`;\r\n}\r\n","import {\r\n  put, call, takeLatest, select\r\n} from 'redux-saga/effects';\r\n\r\nimport {\r\n  GET_POPULAR_MOVIES,\r\n  GET_MOVIES_BY_GENRE,\r\n  GET_MOVIES_BY_NAME,\r\n  LOAD_MORE,\r\n  getMoviesSuccess,\r\n  requestMovies,\r\n  getMoviesFailed,\r\n  addMovies,\r\n  getGenres\r\n} from '../actions/movies';\r\nimport { getURLbyParams, callApi, getGenresURL } from '../api/apiCalls';\r\n\r\nfunction* getPopularMovies() {\r\n  try {\r\n    yield put(requestMovies());\r\n\r\n    const URL = yield call(getURLbyParams);\r\n    const data = yield call(callApi, URL);\r\n    const { results: movies, total_pages: totalPages } = data;\r\n\r\n    yield put(getMoviesSuccess(movies, URL, totalPages));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nfunction* getMoviesByName({ name }) {\r\n  try {\r\n    yield put(requestMovies());\r\n\r\n    const URL = yield call(getURLbyParams, { name });\r\n    const data = yield call(callApi, URL);\r\n    const { results: movies, total_pages: totalPages } = data;\r\n\r\n    yield put(getMoviesSuccess(movies, URL, totalPages));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nfunction* getMoviesByGenre({ genreId }) {\r\n  try {\r\n    yield put(requestMovies());\r\n    const activeSorting = yield select(state => state.movies.sortingType);\r\n\r\n    const URL = yield call(getURLbyParams, { genreId, activeSorting });\r\n    const data = yield call(callApi, URL);\r\n    const { results: movies, total_pages: totalPages } = data;\r\n\r\n    yield put(getMoviesSuccess(movies, URL, totalPages));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nfunction* getMoreMovies() {\r\n  try {\r\n    const { lastFetchURL, currentPage, totalPages } = yield select(({ movies }) => movies);\r\n\r\n    if (currentPage >= totalPages) {\r\n      return;\r\n    }\r\n\r\n    yield put(requestMovies());\r\n    const nextPageURL = lastFetchURL.replace(/page=./, `page=${currentPage + 1}`);\r\n    const data = yield call(callApi, nextPageURL);\r\n    const movies = data.results;\r\n    yield put(addMovies(movies));\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(getMoviesFailed());\r\n  }\r\n}\r\n\r\nexport function* getGenresSaga() {\r\n  const genres = yield call(callApi, getGenresURL());\r\n  yield put(getGenres(genres.genres));\r\n}\r\n\r\nexport default function* watchGettingMovies() {\r\n  yield takeLatest(GET_POPULAR_MOVIES, getPopularMovies);\r\n  yield takeLatest(GET_MOVIES_BY_NAME, getMoviesByName);\r\n  yield takeLatest(GET_MOVIES_BY_GENRE, getMoviesByGenre);\r\n  yield takeLatest(LOAD_MORE, getMoreMovies);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport watchGettingMovies, { getGenresSaga } from './moviesSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchGettingMovies(), getGenresSaga()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from './reducers/RootReducer';\r\n\r\nimport rootSaga from './sagas/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  minWidth: '8rem'\r\n};\r\n\r\nfunction StyledMenuItem({ children, ...rest }) {\r\n  return (\r\n    <MenuItem {...rest} style={styles}>\r\n      {children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nStyledMenuItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nStyledMenuItem.defaultProps = {\r\n  children: ''\r\n};\r\n\r\nexport default StyledMenuItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport StyledMenuItem from './StyledMenuItem';\r\nimport './SortingBar.sass';\r\n\r\nimport {\r\n  POPULARITY_ASC,\r\n  POPULARITY_DESC,\r\n  RELEASE_DATE_ASC,\r\n  RELEASE_DATE_DESC\r\n} from '../../selectors/sortingSelector';\r\n\r\nclass SortingBar extends Component {\r\n  static propTypes = {\r\n    onSetSorting: PropTypes.func.isRequired,\r\n    activeSorting: PropTypes.string.isRequired\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value } = e.target;\r\n    const { onSetSorting, activeSorting } = this.props;\r\n\r\n    if (value !== activeSorting) {\r\n      onSetSorting(value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { activeSorting } = this.props;\r\n\r\n    return (\r\n      <div className=\"sorting\">\r\n        <span className=\"sorting-label\">Sort by:</span>\r\n        <div className=\"select-wrapper\">\r\n          <Select\r\n            style={{ marginLeft: 10 }}\r\n            value={activeSorting}\r\n            onChange={this.handleChange}\r\n            inputProps={{\r\n              name: 'age',\r\n              id: 'age-simple'\r\n            }}\r\n          >\r\n            <StyledMenuItem value={POPULARITY_DESC}>\r\n              Popularity <span>&uarr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={POPULARITY_ASC}>\r\n              Popularity <span>&darr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={RELEASE_DATE_DESC}>\r\n              Release Date <span>&uarr;</span>\r\n            </StyledMenuItem>\r\n            <StyledMenuItem value={RELEASE_DATE_ASC}>\r\n              Release Date <span>&darr;</span>\r\n            </StyledMenuItem>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingBar;\r\n","import { connect } from 'react-redux';\r\n\r\nimport SortingBar from '../components/SortingBar/SortingBar';\r\nimport { setSorting } from '../actions/movies';\r\n\r\nconst mapStateToProps = ({ movies }) => ({\r\n  activeSorting: movies.sortingType\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSetSorting: sortingType => dispatch(setSorting(sortingType))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SortingBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ToggleItem.sass';\r\n\r\nfunction ToggleItem({\r\n  checked, onChange, id, value, children\r\n}) {\r\n  return (\r\n    <label htmlFor={id} className={`toggle-item${checked ? ' active' : ''}`}>\r\n      {children}\r\n      <input\r\n        name=\"view-type\"\r\n        id={id}\r\n        type=\"radio\"\r\n        hidden\r\n        onChange={() => onChange(value)}\r\n        checked={checked}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nToggleItem.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  children: PropTypes.any.isRequired\r\n};\r\n\r\nexport default ToggleItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ViewModule from '@material-ui/icons/ViewModule';\r\nimport ViewList from '@material-ui/icons/ViewList';\r\n\r\nimport ToggleItem from './ToggleItem/ToggleItem';\r\nimport './ViewToggle.sass';\r\n\r\nfunction ViewToggle({ activeViewType, onChangeView }) {\r\n  return (\r\n    <div className=\"view-toggle\">\r\n      <ToggleItem\r\n        name=\"view-type\"\r\n        id=\"toggle-list\"\r\n        onChange={onChangeView}\r\n        checked={activeViewType === 'LIST'}\r\n        value=\"LIST\"\r\n      >\r\n        <ViewList />\r\n      </ToggleItem>\r\n\r\n      <ToggleItem\r\n        name=\"view-type\"\r\n        id=\"toggle-tiles\"\r\n        onChange={onChangeView}\r\n        checked={activeViewType === 'TILES'}\r\n        value=\"TILES\"\r\n      >\r\n        <ViewModule />\r\n      </ToggleItem>\r\n    </div>\r\n  );\r\n}\r\n\r\nViewToggle.propTypes = {\r\n  activeViewType: PropTypes.string.isRequired,\r\n  onChangeView: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ViewToggle;\r\n","import { connect } from 'react-redux';\r\n\r\nimport ViewToggle from '../components/ViewToggle/ViewToggle';\r\nimport { setViewType } from '../actions/movies';\r\n\r\nfunction mapStateToProps({ movies }) {\r\n  return {\r\n    activeViewType: movies.viewType\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onChangeView: viewType => dispatch(setViewType(viewType))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewToggle);\r\n","import React from 'react';\r\n\r\nconst detectMobile = () => {\r\n  const mobiles = [\r\n    'iphone',\r\n    'ipad',\r\n    'android',\r\n    'blackberry',\r\n    'nokia',\r\n    'opera mini',\r\n    'windows mobile',\r\n    'windows phone',\r\n    'iemobile'\r\n  ];\r\n  const ua = navigator.userAgent.toLowerCase();\r\n  return mobiles.some(mobile => ua.includes(mobile));\r\n};\r\n\r\nexport default function withMobileDetection(Component) {\r\n  function WithMobileDetection(props) {\r\n    return <Component {...props} isMobile={detectMobile()} />;\r\n  }\r\n\r\n  WithMobileDetection.displayName = `withMobileDetection(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n  return WithMobileDetection;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Loader.sass';\r\n\r\nfunction Loader({ wrapperStyle }) {\r\n  return (\r\n    <div className=\"loader-wrap\" style={wrapperStyle}>\r\n      <div className=\"loader\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nLoader.propTypes = {\r\n  wrapperStyle: PropTypes.object\r\n};\r\n\r\nLoader.defaultProps = {\r\n  wrapperStyle: {}\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Highcharts from 'highcharts';\r\nimport SolidGauge from 'highcharts/modules/solid-gauge';\r\nimport HCMore from 'highcharts/highcharts-more';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nHCMore(Highcharts);\r\nSolidGauge(Highcharts);\r\n\r\nfunction ActivityGauge({ value }) {\r\n  // Settings for chart\r\n  const options = {\r\n    chart: {\r\n      type: 'solidgauge',\r\n      height: '100%',\r\n      backgroundColor: 'none',\r\n      className: 'activity',\r\n      margin: [0, 0, 0, 0]\r\n    },\r\n\r\n    title: {\r\n      text: ''\r\n    },\r\n\r\n    tooltip: {\r\n      enabled: false\r\n    },\r\n\r\n    pane: {\r\n      startAngle: 0,\r\n      endAngle: 360,\r\n      background: {\r\n        // Track for Move\r\n        outerRadius: '95%',\r\n        innerRadius: '70%',\r\n        backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0])\r\n          .setOpacity(0.3)\r\n          .get(),\r\n        borderWidth: 0\r\n      }\r\n    },\r\n\r\n    yAxis: {\r\n      min: 0,\r\n      max: 10,\r\n      lineWidth: 0,\r\n      tickPositions: []\r\n    },\r\n\r\n    plotOptions: {\r\n      solidgauge: {\r\n        dataLabels: {\r\n          enabled: true,\r\n          backgroundColor: 'none',\r\n          borderWidth: 0,\r\n          defer: true,\r\n          y: -14,\r\n          x: -1,\r\n          color: Highcharts.getOptions().colors[0],\r\n          useHTML: true,\r\n          style: {\r\n            fontSize: '0.8rem'\r\n          }\r\n        },\r\n        linecap: 'round',\r\n        rounded: true\r\n      }\r\n    },\r\n\r\n    series: [\r\n      {\r\n        name: 'Popularity',\r\n        data: [\r\n          {\r\n            color: Highcharts.getOptions().colors[0],\r\n            radius: '95%',\r\n            innerRadius: '70%',\r\n            y: value\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n}\r\n\r\nActivityGauge.propTypes = {\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ActivityGauge;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport ActivityGauge from '../ActivityGauge/ActivityGauge';\r\nimport './MovieCard.sass';\r\n\r\nclass MovieCard extends PureComponent {\r\n  render() {\r\n    const {\r\n      movie: {\r\n        poster_path, title, release_date, overview, id, vote_average\r\n      }\r\n    } = this.props;\r\n\r\n    const releaseDate = release_date ? moment(release_date).format('MMMM D, YYYY') : null;\r\n    const movieOverview = overview.length > 100 ? `${overview.substr(0, 97)}...` : overview;\r\n    const posterUrl = poster_path\r\n      ? `http://image.tmdb.org/t/p/w185/${poster_path}`\r\n      : 'https://via.placeholder.com/185x278/0000FF/808080';\r\n\r\n    return (\r\n      <article className=\"movie-card\">\r\n        <div className=\"poster\">\r\n          <img src={posterUrl} alt={title} className=\"poster-image\" />\r\n        </div>\r\n\r\n        <div className=\"info\">\r\n          <div className=\"title-wrapper\">\r\n            <div className=\"popularity\">\r\n              <ActivityGauge value={vote_average} />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"title\">{title}</h3>\r\n              {releaseDate && <time className=\"release-date\">{releaseDate}</time>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"description\">{movieOverview}</div>\r\n\r\n          <div className=\"more-info\">\r\n            <Link to={`/movie/${id}`} className=\"more-info-link\">\r\n              More info\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SortingBar from '../../containers/SortingBarContainer';\r\nimport ViewToggle from '../../containers/ViewToggleContainer';\r\nimport withMobileDetection from '../withMobileDetection';\r\nimport withInfiniteScrolling from '../withInfiniteScrolling';\r\nimport Loader from '../Loader/Loader';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport './MoviesList.sass';\r\n\r\nclass MoviesList extends PureComponent {\r\n  static propTypes = {\r\n    movies: PropTypes.array,\r\n    fetching: PropTypes.bool.isRequired,\r\n    activeViewType: PropTypes.string.isRequired,\r\n    isMobile: PropTypes.bool.isRequired,\r\n    error: PropTypes.bool.isRequired,\r\n    reachedBottom: PropTypes.bool,\r\n    loadMore: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    movies: [],\r\n    reachedBottom: false,\r\n    loadMore: () => {}\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { reachedBottom, loadMore } = this.props;\r\n\r\n    if (!prevProps.reachedBottom && reachedBottom) {\r\n      loadMore();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      movies, fetching, activeViewType, isMobile, error\r\n    } = this.props;\r\n\r\n    if (fetching && !movies.length > 0) {\r\n      return <Loader wrapperStyle={{ minHeight: 'calc(100vh - 160px)' }} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"actions\">\r\n          <SortingBar />\r\n          {!isMobile && <ViewToggle />}\r\n        </div>\r\n        <div className={`movies-list ${activeViewType.toLowerCase()}`}>\r\n          {movies.length > 0\r\n            ? movies.map(movie => <MovieCard key={movie.id} movie={movie} />)\r\n            : !fetching && !error && 'Movies not found'}\r\n        </div>\r\n        {error ? <div className=\"error-message\">Something went wrong!</div> : null}\r\n        {fetching ? <Loader /> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withInfiniteScrolling(600)(withMobileDetection(MoviesList));\r\n","import React, { PureComponent } from 'react';\r\n\r\nexport default trashold => Component => {\r\n  class withInfiniteScrolling extends PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        reachedBottom: false\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      if (this.scroller) {\r\n        window.addEventListener('scroll', this.onScroll);\r\n      }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n      const availDocumentHeight = document.documentElement.clientHeight;\r\n      const distanceToBottom = this.scroller.getBoundingClientRect().bottom - availDocumentHeight;\r\n      const { reachedBottom } = this.state;\r\n\r\n      if (distanceToBottom < trashold && !reachedBottom) {\r\n        this.setState({ reachedBottom: true });\r\n      } else if (distanceToBottom > trashold && reachedBottom) {\r\n        this.setState({ reachedBottom: false });\r\n      }\r\n    };\r\n\r\n    getScrollerRef = node => {\r\n      this.scroller = node;\r\n    };\r\n\r\n    render() {\r\n      const { reachedBottom } = this.state;\r\n\r\n      return (\r\n        <>\r\n          <Component {...this.props} reachedBottom={reachedBottom} />\r\n          <div style={{ height: 1 }} ref={this.getScrollerRef} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  withInfiniteScrolling.displayName = `withInfiniteScrolling(${Component.displayName\r\n    || Component.name\r\n    || 'Component'})`;\r\n\r\n  return withInfiniteScrolling;\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\nimport { getSortedMovies } from '../selectors/sortingSelector';\r\nimport { loadMore } from '../actions/movies';\r\n\r\nconst mapStateToProps = ({\r\n  movies: {\r\n    movies, fetching, viewType, error, sortingType\r\n  }\r\n}) => ({\r\n  error,\r\n  fetching,\r\n  movies: getSortedMovies({ movies, sortingType }),\r\n  activeViewType: viewType\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadMore: () => dispatch(loadMore())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MoviesList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport './GenreItem.sass';\r\n\r\nfunction GenreItem({\r\n  name, id, onClick, history, location\r\n}) {\r\n  return (\r\n    <ListItem\r\n      key={id}\r\n      button\r\n      component=\"li\"\r\n      onClick={() => {\r\n        onClick(id);\r\n        if (location.pathname !== '/') {\r\n          history.push('/');\r\n        }\r\n      }}\r\n    >\r\n      <ListItemText disableTypography primary={name} className=\"genre-name\" />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nGenreItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func,\r\n  history: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nGenreItem.defaultProps = {\r\n  onClick: () => {}\r\n};\r\n\r\nexport default GenreItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport GenreItem from './GenreItem/GenreItem';\r\nimport './GenresList.sass';\r\n\r\nfunction GenreList({\r\n  getMoviesByGenre, genres, history, location\r\n}) {\r\n  return (\r\n    <div className=\"genres-list\">\r\n      <div className=\"genres-label\">Genres</div>\r\n      <List>\r\n        {genres.length > 0\r\n          ? genres.map(({ name, id }) => (\r\n            <GenreItem\r\n              history={history}\r\n              location={location}\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              onClick={getMoviesByGenre}\r\n            />\r\n          ))\r\n          : 'no genres'}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nGenreList.propTypes = {\r\n  getMoviesByGenre: PropTypes.func,\r\n  genres: PropTypes.array,\r\n  history: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nGenreList.defaultProps = {\r\n  getMoviesByGenre: () => {},\r\n  genres: []\r\n};\r\n\r\nexport default GenreList;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { getMoviesByGenre } from '../actions/movies';\r\nimport GenresList from '../components/GenresList/GenresList';\r\n\r\nconst mapStateToProps = state => ({\r\n  genres: state.movies.genres\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMoviesByGenre: genreId => dispatch(getMoviesByGenre(genreId))\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(GenresList)\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Sidebar.sass';\r\n\r\nfunction Sidebar({\r\n  children, isMobile, isOpen, onClose\r\n}) {\r\n  const sidebarClasses = `sidebar${isMobile ? ' mobile' : ''}${isOpen ? ' open' : ''}`;\r\n\r\n  return (\r\n    <div className={sidebarClasses} onClick={onClose} role=\"navigation\">\r\n      <button type=\"button\" className=\"close-btn\" onClick={onClose}>\r\n        &times;\r\n      </button>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  children: PropTypes.any,\r\n  isMobile: PropTypes.bool.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  children: ''\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Content.sass';\r\n\r\nfunction Content({ children }) {\r\n  return <div className=\"content\">{children}</div>;\r\n}\r\n\r\nContent.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nContent.defaultProps = {\r\n  children: ''\r\n};\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport './Form.sass';\r\n\r\n// styles for material ui input\r\nconst styles = () => ({\r\n  input: {\r\n    color: 'white'\r\n  },\r\n  formControl: {\r\n    marginBottom: 6,\r\n    flexDirection: 'row',\r\n    flexBasis: 300\r\n  },\r\n  cssLabel: {\r\n    color: 'white',\r\n    '&$cssFocused': {\r\n      color: 'white'\r\n    }\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    '&:after': {\r\n      borderBottomColor: 'white'\r\n    },\r\n    borderBottomColor: 'white',\r\n    '&:before': {\r\n      borderBottomColor: 'white'\r\n    }\r\n  }\r\n});\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    history: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    onSubmit: () => {}\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      input: ''\r\n    };\r\n  }\r\n\r\n  cleanInput = () => {\r\n    this.setState({\r\n      input: ''\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    const { onSubmit, history, location } = this.props;\r\n    const { input } = this.state;\r\n    e.preventDefault();\r\n\r\n    if (!input) return;\r\n\r\n    if (typeof onSubmit === 'function') {\r\n      onSubmit(input);\r\n    }\r\n\r\n    if (location.pathname !== '/') {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { input } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"search-form\">\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel\r\n            htmlFor=\"search-input\"\r\n            classes={{\r\n              root: classes.cssLabel,\r\n              focused: classes.cssFocused\r\n            }}\r\n          >\r\n            Search\r\n          </InputLabel>\r\n          <Input\r\n            onChange={this.onChange}\r\n            type=\"search\"\r\n            value={input}\r\n            name=\"input\"\r\n            id=\"search-input\"\r\n            fullWidth\r\n            classes={{\r\n              underline: classes.cssUnderline\r\n            }}\r\n            className={classes.input}\r\n          />\r\n        </FormControl>\r\n        <IconButton type=\"submit\" aria-label=\"search\">\r\n          <SearchIcon className=\"search-icon\" />\r\n        </IconButton>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Form);\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { getMoviesByName } from '../actions/movies';\r\nimport Form from '../components/Form/Form';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: name => dispatch(getMoviesByName(name))\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    undefined,\r\n    mapDispatchToProps\r\n  )(Form)\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/icons/Menu';\r\n\r\nimport FormContainer from '../../containers/FormContainer';\r\nimport logo from '../../img/logo.png';\r\nimport './Header.sass';\r\n\r\nfunction Header({ isMobile, toggleSidebar }) {\r\n  if (isMobile) {\r\n    return (\r\n      <header className=\"header mobile\">\r\n        <FormContainer />\r\n        <button className=\"menu-button\" type=\"button\" onClick={toggleSidebar}>\r\n          <Menu className=\"menu-icon\" />\r\n        </button>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"logo\" className=\"logo\" />\r\n      </Link>\r\n      <FormContainer />\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  isMobile: PropTypes.bool.isRequired,\r\n  toggleSidebar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ActivityGauge from '../ActivityGauge/ActivityGauge';\r\nimport Loader from '../Loader/Loader';\r\nimport { fetchMovie } from '../../api/apiCalls';\r\nimport './MoviePage.sass';\r\n\r\nclass MoviePage extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.object.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fethcing: true,\r\n      hasError: false,\r\n      movie: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n\r\n    fetchMovie(params.id)\r\n      .then(movie => {\r\n        this.setState({\r\n          movie,\r\n          fethcing: false,\r\n          hasError: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n\r\n        this.setState({\r\n          hasError: error.message\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { hasError, fethcing, movie } = this.state;\r\n\r\n    if (hasError) {\r\n      return <div className=\"error-message\">Something went wrong. {hasError}</div>;\r\n    }\r\n\r\n    if (fethcing) {\r\n      return <Loader wrapperStyle={{ minHeight: 'calc(100vh - 160px)' }} />;\r\n    }\r\n\r\n    const {\r\n      budget,\r\n      genres,\r\n      title,\r\n      release_date,\r\n      poster_path,\r\n      runtime,\r\n      status,\r\n      overview,\r\n      vote_average\r\n    } = movie;\r\n    const genresName = genres.map(genre => genre.name);\r\n\r\n    const posterUrl = poster_path\r\n      ? `http://image.tmdb.org/t/p/original/${poster_path}`\r\n      : 'https://via.placeholder.com/400x600/0000FF/808080';\r\n\r\n    return (\r\n      <div className=\"movie\">\r\n        <div className=\"poster-wrapper\">\r\n          <img className=\"poster\" src={posterUrl} alt={`${title} poster`} />\r\n        </div>\r\n\r\n        <section className=\"movie-info\">\r\n          <div className=\"info-header\">\r\n            <div className=\"popularity\">\r\n              <ActivityGauge value={vote_average} />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"movie-name\">{title}</h3>\r\n              <span className=\"release-date\">({release_date.substr(0, 4)})</span>\r\n              <div className=\"status\">\r\n                <output>{status}</output>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <dl className=\"info-list\">\r\n            <dt>Runtime</dt>\r\n            <dd>{runtime}m</dd>\r\n\r\n            <dt>Genres</dt>\r\n            <dd>{genresName.join(', ')}</dd>\r\n\r\n            <dt>Budget</dt>\r\n            <dd>{budget}$</dd>\r\n\r\n            <dt>Overview</dt>\r\n            <dd>{overview}</dd>\r\n          </dl>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviePage;\r\n","import React from 'react';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NotFound.sass';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <div className=\"message\">\r\n        <BugReport style={{ width: '10rem', height: '10rem' }} />\r\n        <h2>Page not found</h2>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Home\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MoviesList from '../../containers/MoviesListContainer';\r\nimport GenresList from '../../containers/GenresListContainer';\r\nimport withMobileDetection from '../withMobileDetection';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Content from '../Content/Content';\r\nimport Header from '../Header/Header';\r\nimport MoviePage from '../MoviePage/MoviePage';\r\nimport NotFound from '../NotFound/NotFound';\r\nimport './App.sass';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSidebarOpen: false\r\n    };\r\n  }\r\n\r\n  closeSidebar = () => {\r\n    this.setState({\r\n      isSidebarOpen: false\r\n    });\r\n  };\r\n\r\n  toggleSidebar = () => {\r\n    this.setState(state => ({\r\n      isSidebarOpen: !state.isSidebarOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { isMobile } = this.props;\r\n    const { isSidebarOpen } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header isMobile={isMobile} toggleSidebar={this.toggleSidebar} />\r\n        <Sidebar isMobile={isMobile} isOpen={isSidebarOpen} onClose={this.closeSidebar}>\r\n          <GenresList />\r\n        </Sidebar>\r\n        <Content>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={MoviesList} />\r\n            <Route path=\"/movie/:id\" render={props => <MoviePage {...props} />} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Content>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  isMobile: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withMobileDetection(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport store from './store';\r\nimport App from './components/App/App';\r\nimport { getMoviesByPopularity } from './actions/movies';\r\nimport './index.sass';\r\n\r\nstore.dispatch(getMoviesByPopularity());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}